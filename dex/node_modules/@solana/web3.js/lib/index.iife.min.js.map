{"version":3,"file":"index.iife.min.js","sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/ed25519/lib/esm/index.js","../src/utils/ed25519.ts","../src/utils/to-buffer.ts","../node_modules/bn.js/lib/bn.js","../node_modules/safe-buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/bs58/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.js","../node_modules/borsh/lib/index.js","../src/utils/borsh-schema.ts","../src/publickey.ts","../src/account.ts","../src/bpf-loader-deprecated.ts","../node_modules/@solana/buffer-layout/lib/Layout.js","../src/transaction/constants.ts","../src/transaction/expiry-custom-errors.ts","../src/message/account-keys.ts","../src/layout.ts","../src/utils/shortvec-encoding.ts","../src/utils/assert.ts","../src/message/compiled-keys.ts","../src/message/legacy.ts","../src/message/v0.ts","../src/message/versioned.ts","../src/transaction/legacy.ts","../src/transaction/message.ts","../src/transaction/versioned.ts","../src/sysvar.ts","../src/utils/send-and-confirm-transaction.ts","../src/utils/sleep.ts","../src/instruction.ts","../src/fee-calculator.ts","../src/nonce-account.ts","../node_modules/bigint-buffer/dist/browser.js","../src/utils/bigint.ts","../src/programs/system.ts","../src/loader.ts","../src/bpf-loader.ts","../node_modules/fast-stable-stringify/index.js","../node_modules/superstruct/lib/index.es.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/eventemitter3/index.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/jayson/lib/client/browser/index.js","../src/epoch-schedule.ts","../src/errors.ts","../src/__forks__/browser/fetch-impl.ts","../src/timing.ts","../src/account-data.ts","../src/programs/address-lookup-table/state.ts","../src/utils/makeWebsocketUrl.ts","../src/connection.ts","../src/keypair.ts","../src/programs/address-lookup-table/index.ts","../src/programs/compute-budget.ts","../src/programs/ed25519.ts","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/secp256k1/lib/esm/index.js","../src/utils/secp256k1.ts","../src/programs/secp256k1.ts","../src/programs/stake.ts","../src/programs/vote.ts","../src/validator-info.ts","../src/vote-account.ts","../src/utils/cluster.ts","../src/utils/send-and-confirm-raw-transaction.ts","../src/index.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _255n = BigInt(255);\nconst CURVE_ORDER = _2n ** BigInt(252) + BigInt('27742317777372353535851937790883648493');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: _2n ** _255n - BigInt(19),\n    l: CURVE_ORDER,\n    n: CURVE_ORDER,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst MAX_256B = _2n ** BigInt(256);\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(_2n * mod(Z1 ** _2n));\n        const D = mod(a * A);\n        const E = mod(mod((X1 + Y1) ** _2n) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2 ** _2n));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= MAX_256B)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & (_2n ** _255n - _1n));\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, MAX_256B))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        x_3 = mod((DA + CB) ** _2n);\n        z_3 = mod(x_1 * (DA - CB) ** _2n);\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {AccountKeysFromLookups} from '../message/account-keys';\nimport assert from '../utils/assert';\nimport {toBuffer} from '../utils/to-buffer';\nimport {Blockhash} from '../blockhash';\nimport {Message, MessageV0, VersionedMessage} from '../message';\nimport {PublicKey} from '../publickey';\nimport {AddressLookupTableAccount} from '../programs';\nimport {AccountMeta, TransactionInstruction} from './legacy';\n\nexport type TransactionMessageArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\nexport type DecompileArgs =\n  | {\n      accountKeysFromLookups: AccountKeysFromLookups;\n    }\n  | {\n      addressLookupTableAccounts: AddressLookupTableAccount[];\n    };\n\nexport class TransactionMessage {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n\n  constructor(args: TransactionMessageArgs) {\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n\n  static decompile(\n    message: VersionedMessage,\n    args?: DecompileArgs,\n  ): TransactionMessage {\n    const {header, compiledInstructions, recentBlockhash} = message;\n\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts,\n    } = header;\n\n    const numWritableSignedAccounts =\n      numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n\n    const numWritableUnsignedAccounts =\n      message.staticAccountKeys.length -\n      numRequiredSignatures -\n      numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error(\n        'Failed to decompile message because no account keys were found',\n      );\n    }\n\n    const instructions: TransactionInstruction[] = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys: AccountMeta[] = [];\n\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(\n            `Failed to find key for account key index ${keyIndex}`,\n          );\n        }\n\n        const isSigner = keyIndex < numRequiredSignatures;\n\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable =\n            keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable =\n            keyIndex - accountKeys.staticAccountKeys.length <\n            // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n            accountKeys.accountKeysFromLookups!.writable.length;\n        }\n\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable,\n        });\n      }\n\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(\n          `Failed to find program id for program id index ${compiledIx.programIdIndex}`,\n        );\n      }\n\n      instructions.push(\n        new TransactionInstruction({\n          programId,\n          data: toBuffer(compiledIx.data),\n          keys,\n        }),\n      );\n    }\n\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash,\n    });\n  }\n\n  compileToLegacyMessage(): Message {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n    });\n  }\n\n  compileToV0Message(\n    addressLookupTableAccounts?: AddressLookupTableAccount[],\n  ): MessageV0 {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = require(\"../helpers/regeneratorRuntime\")();\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst POW_2_256 = _2n ** BigInt(256);\nconst CURVE = {\n    a: _0n,\n    b: BigInt(7),\n    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),\n    n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n};\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(B ** _2n);\n        const D = mod(_2n * (mod((X1 + B) ** _2n) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E ** _2n);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** _2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** _2n - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.y & _1n ? '03' : '02';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = isUint8a(hex);\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = isUint8a(hex);\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every(isUint8a))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction isUint8a(bytes) {\n    return bytes instanceof Uint8Array;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction numTo32bStr(num) {\n    if (num > POW_2_256)\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    return hexToBytes(numTo32bStr(num));\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst POW_2_128 = _2n ** BigInt(128);\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n    const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n    const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        if (typeof utils.hmacSha256Sync !== 'function')\n            throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n        const res = utils.hmacSha256Sync(this.k, ...values);\n        if (res instanceof Promise)\n            throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n        return res;\n    }\n    incr() {\n        if (this.counter >= 1000) {\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        }\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (isUint8a(key)) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isPub(item) {\n    const arr = isUint8a(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    const hex = numTo32bStr(num);\n    return hexToBytes(hex);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction finalizeSchnorrChallenge(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nfunction hasEvenY(point) {\n    return (point.y & _1n) === _0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nfunction initSchnorrSigArgs(message, privateKey, auxRand) {\n    if (message == null)\n        throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n    const m = ensureBytes(message);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const px = P.toRawX();\n    const d = hasEvenY(P) ? d0 : CURVE.n - d0;\n    return { m, P, px, d, rand };\n}\nfunction initSchnorrNonce(d, t0h) {\n    return numTo32b(d ^ bytesToNumber(t0h));\n}\nfunction finalizeSchnorrNonce(k0h) {\n    const k0 = mod(bytesToNumber(k0h), CURVE.n);\n    if (k0 === _0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const rx = R.toRawX();\n    const k = hasEvenY(R) ? k0 : CURVE.n - k0;\n    return { R, rx, k };\n}\nfunction finalizeSchnorrSig(R, k, e, d) {\n    return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n}\nasync function schnorrSign(message, privateKey, auxRand = utils.randomBytes()) {\n    const { m, px, d, rand } = initSchnorrSigArgs(message, privateKey, auxRand);\n    const t = initSchnorrNonce(d, await utils.taggedHash(TAGS.aux, rand));\n    const { R, rx, k } = finalizeSchnorrNonce(await utils.taggedHash(TAGS.nonce, t, px, m));\n    const e = finalizeSchnorrChallenge(await utils.taggedHash(TAGS.challenge, rx, px, m));\n    const sig = finalizeSchnorrSig(R, k, e, d);\n    const isValid = await schnorrVerify(sig, m, px);\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nfunction schnorrSignSync(message, privateKey, auxRand = utils.randomBytes()) {\n    const { m, px, d, rand } = initSchnorrSigArgs(message, privateKey, auxRand);\n    const t = initSchnorrNonce(d, utils.taggedHashSync(TAGS.aux, rand));\n    const { R, rx, k } = finalizeSchnorrNonce(utils.taggedHashSync(TAGS.nonce, t, px, m));\n    const e = finalizeSchnorrChallenge(utils.taggedHashSync(TAGS.challenge, rx, px, m));\n    const sig = finalizeSchnorrSig(R, k, e, d);\n    const isValid = schnorrVerifySync(sig, m, px);\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !hasEvenY(R) || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = finalizeSchnorrChallenge(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = finalizeSchnorrChallenge(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    privateAdd: (privateKey, tweak) => {\n        const p = normalizePrivateKey(privateKey);\n        const t = normalizePrivateKey(tweak);\n        return numTo32b(mod(p + t, CURVE.n));\n    },\n    privateNegate: (privateKey) => {\n        const p = normalizePrivateKey(privateKey);\n        return numTo32b(CURVE.n - p);\n    },\n    pointAddScalar: (p, tweak, isCompressed) => {\n        const P = Point.fromHex(p);\n        const t = normalizePrivateKey(tweak);\n        const Q = Point.BASE.multiplyAndAddUnsafe(P, t, _1n);\n        if (!Q)\n            throw new Error('Tweaked point at infinity');\n        return Q.toRawBytes(isCompressed);\n    },\n    pointMultiply: (p, tweak, isCompressed) => {\n        const P = Point.fromHex(p);\n        const t = bytesToNumber(ensureBytes(tweak));\n        return P.multiply(t).toRawBytes(isCompressed);\n    },\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof utils.sha256Sync !== 'function')\n            throw new Error('utils.sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = utils.sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n  DurableNonceTransactionConfirmationStrategy,\n  TransactionConfirmationStrategy,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: TransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | TransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy: TransactionConfirmationStrategy | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'nonceValue',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as DurableNonceTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n"],"names":["base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","ieee754","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","proto","foo","Object","setPrototypeOf","prototype","defineProperty","enumerable","get","isBuffer","this","undefined","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","slice","fromArrayLike","array","arrayView","copy","obj","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","a","x","y","min","String","toLowerCase","concat","list","pos","set","call","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","constructor","super","writable","configurable","name","stack","message","range","input","msg","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","number","isSafeInteger","bool","lengths","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","assert","assert$3","u32","Uint32Array","createView","DataView","rotr","word","shift","v","padStart","TextEncoder","encode","toBytes","Hash","clone","_cloneInto","wrapConstructor","hashConstructor","hashC","update","digest","wrapConstructorWithOpts","hashCons","opts","setBigUint64","view","_32n","_u32_max","wh","wl","h","l","setUint32","SHA2","padOffset","take","dataView","process","roundClean","digestInto","oview","forEach","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","u64$2","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","sha512","_0n","_1n","_2n","_255n","CURVE_ORDER","CURVE","freeze","P","Gx","Gy","MAX_256B","SQRT_M1","ExtendedPoint","z","t","static","p","Point","ZERO","mod","points","toInv","invertBatch","toAffine","toAffineBatch","fromAffine","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","X2Z1","Y1Z2","Y2Z1","negate","double","A","B","C","D","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","precomputeWindow","W","windows","base","window","wNAF","affinePoint","BASE","_WINDOW_SIZE","precomputes","pointPrecomputes","normalizeZ","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","multiply","scalar","normalizeScalar","multiplyUnsafe","P0","isSmallOrder","isTorsionFree","invZ","invert","ax","ay","zz","fromRistrettoBytes","legacyRist","toRistrettoBytes","fromRistrettoHash","WeakMap","_setWindowSize","delete","hex","strict","ensureBytes","normed","bytesToNumberLE","y2","u","isValid","uvRatio","isXOdd","isLastByteOdd","privateKey","getExtendedPublicKey","point","toRawBytes","numberTo32BytesLE","toHex","bytesToHex","toX25519","Point$1","Signature","r","assertValidity","fromHex","u8","concatBytes","arrays","every","reduce","result","pad","hexes","uint8a","hexToBytes","hexByte","byte","numberTo32BytesBE","reverse","edIsNegative","modulo","q","gcd","nums","lastMultiplied","acc","inverted","reduceRight","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","x2","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","adjustBytes25519","checkPrivateKey","key","getKeyFromHash","hashed","head","prefix","pointBytes","_sha512Sync","sha512s","async","utils","getExtendedPublicKeySync","getPublicKeySync","signSync","R","k","prepareVerification","sig","publicKey","SB","pub","finishVerification","kA","RkA","verifySync","sync","getPublicKey","sign","verify","crypto","node","nodeCrypto","web","self","TORSION_SUBGROUP","hashToPrivateScalar","randomBytes","bytesLength","getRandomValues","randomPrivateKey","messages","subtle","createHash","precompute","sha512Sync","defineProperties","ed25519","generatePrivateKey","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","module","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","_init","wordSize","left","right","cmp","init","_initNumber","_initArray","_parseHex","_parseBase","toArray","ceil","w","off","_strip","parseHex4Bits","index","parseHexByte","lowerBound","parseLength","parseBase","limbLen","limbPow","total","imuln","_iaddn","dest","move","_move","_expand","strip","_normSign","for","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","toArrayLike","allocate","ArrayType","reqLength","postfix","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","toBitArray","bit","wbit","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","smallMulTo","ncarry","rword","maxJ","comb10MulTo","o","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","bl2","bh2","b3","bl3","bh3","bl4","bh4","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","ireduce","rlen","imulK","K256","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","inv","wnd","current","currentLen","mont","Mont","rinv","minv","copyProps","SafeBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","source","zeroes","pbegin","pend","b58","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","basex","bs58","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","W2","s0","s1","sigma1","sigma0","sha256","inRange","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","options","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextDecoder$1","UTF8Decoder","input_stream","handler","_encoder","_options","TextEncoder$1","opt_string","UTF8Encoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","count","temp","encoding_lib","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$2","ResolvedTextDecoder","textDecoder","baseEncode","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","fieldName","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","item","kind","serializeStruct","borshSerialize","structSchema","fields","field","idx","values","Writer","deserializeField","reader","option","Map","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","Struct","properties","assign","SOLANA_SCHEMA","Enum","enum","keys","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","toStringTag","PublicKey","decoded","toBase58","zeroPad","_Symbol$toStringTag","fromPublicKey","seed","programId","publicKeyBytes","seeds","createProgramAddressSync","nonce","address","seedsWithNonce","err","findProgramAddressSync","pubkeyData","pubkey","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","Layout_1","Layout$1","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u24","u16","greedy","Constant","UTF8","Blob","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","seq","struct","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","span","property","makeDestinationObject","getSpan","replicate","rv","fromArray","bindConstructorLayout","Class","layout","layout_","boundConstructor_","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","signature","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","authorized","lockup","voteInit","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","assert$1","condition","CompiledKeys","payer","keyMetaMap","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","entries","writableSigners","filter","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","state","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","Message","accountKeys","recentBlockhash","indexToProgramIds","account","version","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","compile","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","JSON","stringify","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","signedKeys","unsignedKeys","invariant","_compile","valid","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","Set","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","TransactionMessage","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","browser","toBigIntLE","reversed","toBigIntLE_1","toBigIntBE","browser$1","toBufferLE","toBufferLE_1","toBufferBE","encodeDecode","bigInt","bigIntLayout","SystemInstruction","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","checkKeyLength","lamports","space","Create","fromPubkey","newAccountPubkey","Transfer","toPubkey","TransferWithSeed","basePubkey","Allocate","accountPubkey","AllocateWithSeed","Assign","AssignWithSeed","CreateWithSeed","InitializeNonceAccount","noncePubkey","AdvanceNonceAccount","WithdrawNonceAccount","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","UpgradeNonceAccount","params","createAccountWithSeed","createAccount","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","chunkSize","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","BPF_LOADER_PROGRAM_ID","BpfLoader","getMinNumSignatures","elf","loaderProgramId","load","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","StructError","failure","failures","rest","path","_cached","isIterable","isObject","iterator","print","shiftIterator","done","toFailure","context","branch","refinement","toFailures","run","coerce","coercer","validator","ts","refiner","props","is","validate","tuples","tuple","define","any","Element","boolean","literal","description","never","nullable","optional","record","Key","Value","Elements","Never","Structs","S","unknown","_interopRequireDefault","_defineProperties","descriptor","_createClass","Constructor","protoProps","staticProps","_classCallCheck","_setPrototypeOf","__proto__","_inherits","subClass","superClass","_typeof","_assertThisInitialized","ReferenceError","assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","getPrototypeOf","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","_default","_classCallCheck2","_createClass2","_inherits2","require$$3","_possibleConstructorReturn2","require$$4","_getPrototypeOf2","require$$5","_eventemitter","require$$6","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","construct","sham","Proxy","WebSocketBrowserImpl","_EventEmitter","_super","protocols","_this","socket","WebSocket","onopen","onmessage","onerror","onclose","reason","send","optionsOrCallback","callback","cb","close","addEventListener","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","reject","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","mark","awrap","iter","object","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","regenerator","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_regenerator","_asyncToGenerator2","_typeof2","require$$7","require$$8","require$$9","__rest","propertyIsEnumerable","CommonClient","webSocketFactory","_a","generate_request_id","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","connect","timeout","ws_opts","_this2","jsonrpc","id","promise","_login","_callee","resp","_callee$","_context","login","_x","_listMethods","_callee2","_callee2$","_context2","listMethods","notify","_this3","_subscribe","_callee3","_callee3$","_context3","subscribe","_x2","_unsubscribe","_callee4","_callee4$","_context4","unsubscribe","_x3","_this4","_ref","parse","notification","clearTimeout","_ref2","index_browser","Client_1","Client","_websocket","_client","_CommonClient","_ref$autoconnect","_ref$reconnect","_ref$reconnect_interv","_ref$max_reconnects","rnds8","rng","msCrypto","REGEX","uuid","test","byteToHex","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","stringToBytes","unescape","encodeURIComponent","DNS","URL","v35","hashfunc","generateUUID","namespace","md5","md5ToHexEncodedArray","wordsToMd5","bytesToWords","length32","hexTab","getOutputLength","inputLength8","olda","oldb","oldc","oldd","md5ff","md5gg","md5hh","md5ii","safeAdd","length8","lsw","msw","bitRotateLeft","cnt","md5cmn","v3$1","v4","rnds","ROTL","sha1","K","N","M","_i","_i2","_t","_t2","T","v5","v5$1","nil","generateRequest","request","notificationIdNull","generateRequest_1","ClientBrowser","callServer","reviver","replacer","isBatch","isRaw","hasCallback","response","_parseResponse","responseText","isError","isNotError","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","customMessage","globalThis","fetch","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","pick","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetInflationRateResult","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","url","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","fetchImpl","agent","fetchWithMiddleware","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","body","headers","COMMON_HTTP_HEADERS","too_many_requests_retries","waitTime","statusText","text","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","wsEndpoint","confirmTransactionInitialTimeout","RpcWebSocketClient","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","_buildArgs","unsafeRes","getBalanceAndContext","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","configWithoutEncoding","strategy","rawSignature","_config$abortSignal","aborted","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","getBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","_signatureStatus","signatureStatus","_outcome$slotInWhichN","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","transactionDetails","extra","block","endSlot","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","getSlot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","_this$_subscriptionsB","prevState","stateChangeCallbacks","clientSubscriptionId","_this$_subscriptionSt","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","checkKeysLength","recentSlot","recipient","AddressLookupTableProgram","lookupTableAddress","bumpSeed","addr","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","additionalFee","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","writeInto","bufferOut","xofInto","xof","keccak_256","genShake","dkLen","HMAC","_key","iHash","oHash","hmac","_3n","_8n","POW_2_256","beta","weistrass","x3","USE_ENDOMORPHISM","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","HH","HHH","V","k1neg","k1","k2neg","splitScalarEndo","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","isShort","bytesToNumber","isValidFieldElement","sqrtMod","isYOdd","isFirstByteOdd","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","recovery","truncateHash","normalizeSignature","numTo32bStr","u1","u2","Q","multiplyAndAddUnsafe","isCompressed","toHexX","toRawX","aP","bQ","sliceDER","parseDERInt","parseDERSignature","sBytes","rBytesLeft","isUint8a","hexToNumber","fromDER","isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toCompactRawBytes","toCompactHex","numTo32b","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","t1","t2","scratch","divNearest","POW_2_128","c1","c2","HmacDrbg","counter","hmacSha256","hmacSync","hmacSha256Sync","incr","reseedSync","generateSync","kmdToSig","kBytes","fromCompact","fromPrivateKey","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","canonical","der","recovered","privKey","drbg","TAGGED_HASH_PREFIXES","isValidPrivateKey","privateAdd","tweak","privateNegate","pointAddScalar","pointMultiply","hashToPrivateKey","ckey","importKey","createHmac","sha256Sync","taggedHash","tagP","tagH","taggedHashSync","msgs","ecdsaSign","secp256k1","publicKeyCreate","ETHEREUM_ADDRESS_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","Initialize","stakePubkey","Delegate","newAuthorized","stakeAuthorizationType","Authorize","custodianPubkey","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","Split","splitStakePubkey","Merge","sourceStakePubKey","Withdraw","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","splitInstruction","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","VoteAuthorizationLayout","Voter","initializeAccount","currentVoteAccountBalance","rentExemptMinimum","withdraw","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeyCount","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","isEmpty","http","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL"],"mappings":"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"}