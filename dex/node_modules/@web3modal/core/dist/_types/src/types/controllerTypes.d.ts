import type { Chain, EthereumClient } from '@web3modal/ethereum';
export interface MobileWallet {
    id: string;
    name: string;
    links: {
        universal: string;
        native?: string;
    };
}
export interface DesktopWallet {
    id: string;
    name: string;
    links: {
        native: string;
        universal: string;
    };
}
export interface ConfigCtrlState {
    projectId?: string;
    themeMode?: 'dark' | 'light';
    themeColor?: 'blackWhite' | 'blue' | 'default' | 'green' | 'magenta' | 'orange' | 'purple' | 'teal';
    themeBackground?: 'gradient' | 'themeColor';
    themeZIndex?: number;
    standaloneChains?: string[];
    defaultChain?: Chain;
    mobileWallets?: MobileWallet[];
    desktopWallets?: DesktopWallet[];
    walletImages?: Record<string, string>;
    chainImages?: Record<string, string>;
    tokenImages?: Record<string, string>;
    enableStandaloneMode?: boolean;
    enableNetworkView?: boolean;
    explorerAllowList?: string[];
    explorerDenyList?: string[];
    termsOfServiceUrl?: string;
    privacyPolicyUrl?: string;
}
export interface ModalCtrlState {
    open: boolean;
}
export interface OptionsCtrlState {
    selectedChain?: Chain;
    chains?: EthereumClient['chains'];
    standaloneChains?: string[];
    standaloneUri?: string;
    address?: `0x${string}`;
    isConnected: boolean;
    isStandalone: boolean;
    isCustomDesktop: boolean;
    isCustomMobile: boolean;
    isDataLoaded: boolean;
    isUiLoaded: boolean;
    isExplorer: boolean;
    profileName?: string | null;
    profileAvatar?: string | null;
    profileLoading?: boolean;
    balanceLoading?: boolean;
    balance?: {
        amount: string;
        symbol: string;
    };
}
export interface ExplorerCtrlState {
    wallets: ListingResponse & {
        page: number;
    };
    search: ListingResponse & {
        page: number;
    };
    previewWallets: Listing[];
    recomendedWallets: Listing[];
}
export interface PageParams {
    page?: number;
    search?: string;
    entries?: number;
    version?: number;
    device?: 'desktop' | 'mobile';
    order?: 'asc' | 'desc';
    chains?: string;
}
export interface PlatformInfo {
    native: string;
    universal: string;
}
export interface Listing {
    id: string;
    name: string;
    description: string;
    homepage: string;
    chains: string[];
    versions: string[];
    app_type: string;
    image_id: string;
    image_url: {
        sm: string;
        md: string;
        lg: string;
    };
    app: {
        browser: string;
        ios: string;
        android: string;
        mac: string;
        window: string;
        linux: string;
    };
    mobile: PlatformInfo;
    desktop: PlatformInfo;
    metadata: {
        shortName: string;
        colors: {
            primary: string;
            secondary: string;
        };
    };
}
export interface ListingResponse {
    listings: Listing[];
    total: number;
}
export interface ToastCtrlState {
    open: boolean;
    message: string;
    variant: 'error' | 'success';
}
export type RouterView = 'Account' | 'ConnectWallet' | 'DesktopConnector' | 'GetWallet' | 'Help' | 'InjectedConnector' | 'InstallConnector' | 'Qrcode' | 'SelectNetwork' | 'SwitchNetwork' | 'WalletExplorer' | 'WalletFilter';
export interface DesktopConnectorData {
    name: string;
    native?: string;
    universal?: string;
    icon?: string;
    walletId?: string;
}
export type SwitchNetworkData = Chain;
export interface InstallConnectorData {
    id: string;
    name: string;
    url: string;
    isMobile?: boolean;
}
export interface RouterCtrlState {
    history: RouterView[];
    view: RouterView;
    data?: {
        DesktopConnector?: DesktopConnectorData;
        SwitchNetwork?: SwitchNetworkData;
        InstallConnector?: InstallConnectorData;
    };
}
export interface ClientCtrlState {
    initialized: boolean;
    ethereumClient?: EthereumClient;
}
