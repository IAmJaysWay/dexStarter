{"version":3,"file":"index.js","sources":["../src/controllers/OptionsCtrl.ts","../src/controllers/ClientCtrl.ts","../src/utils/CoreUtil.ts","../src/controllers/ConfigCtrl.ts","../src/utils/ExplorerUtil.ts","../src/controllers/ExplorerCtrl.ts","../src/controllers/RouterCtrl.ts","../src/controllers/ModalCtrl.ts","../src/controllers/ToastCtrl.ts","../src/utils/PolyfillUtil.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChain: undefined,\n  chains: undefined,\n  standaloneChains: undefined,\n  standaloneUri: undefined,\n  address: undefined,\n  profileName: undefined,\n  profileAvatar: undefined,\n  profileLoading: false,\n  balanceLoading: false,\n  balance: undefined,\n  isConnected: false,\n  isStandalone: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isExplorer: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setStandaloneChains(standaloneChains: OptionsCtrlState['standaloneChains']) {\n    state.standaloneChains = standaloneChains\n  },\n\n  setStandaloneUri(standaloneUri: OptionsCtrlState['standaloneUri']) {\n    state.standaloneUri = standaloneUri\n  },\n\n  getSelectedChain() {\n    const selectedChain = ClientCtrl.client().getNetwork().chain\n    if (selectedChain) {\n      state.selectedChain = selectedChain\n    }\n\n    return state.selectedChain\n  },\n\n  setSelectedChain(selectedChain: OptionsCtrlState['selectedChain']) {\n    state.selectedChain = selectedChain\n  },\n\n  setIsStandalone(isStandalone: OptionsCtrlState['isStandalone']) {\n    state.isStandalone = isStandalone\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsExplorer(isExplorer: OptionsCtrlState['isExplorer']) {\n    state.isExplorer = isExplorer\n  },\n\n  getAccount() {\n    const account = ClientCtrl.client().getAccount()\n    state.address = account.address\n    state.isConnected = account.isConnected\n  },\n\n  setAddress(address: OptionsCtrlState['address']) {\n    state.address = address\n  },\n\n  setIsConnected(isConnected: OptionsCtrlState['isConnected']) {\n    state.isConnected = isConnected\n  },\n\n  setProfileName(profileName: OptionsCtrlState['profileName']) {\n    state.profileName = profileName\n  },\n\n  setProfileAvatar(profileAvatar: OptionsCtrlState['profileAvatar']) {\n    state.profileAvatar = profileAvatar\n  },\n\n  setProfileLoading(profileLoading: OptionsCtrlState['profileLoading']) {\n    state.profileLoading = profileLoading\n  },\n\n  setBalanceLoading(balanceLoading: OptionsCtrlState['balanceLoading']) {\n    state.balanceLoading = balanceLoading\n  },\n\n  setBalance(balance: OptionsCtrlState['balance']) {\n    state.balance = balance\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  resetEnsProfile() {\n    state.profileName = undefined\n    state.profileAvatar = undefined\n  },\n\n  resetBalance() {\n    state.balance = undefined\n  },\n\n  resetAccount() {\n    state.address = undefined\n    OptionsCtrl.resetEnsProfile()\n    OptionsCtrl.resetBalance()\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ClientCtrlState } from '../types/controllerTypes'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ClientCtrlState>({\n  initialized: false,\n  ethereumClient: undefined\n})\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    if (!state.initialized && ethereumClient) {\n      state.ethereumClient = ethereumClient\n      OptionsCtrl.setChains(ethereumClient.chains)\n      state.initialized = true\n    }\n  },\n\n  client() {\n    if (state.ethereumClient) {\n      return state.ethereumClient\n    }\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n","import { ClientCtrl } from '../controllers/ClientCtrl'\nimport { OptionsCtrl } from '../controllers/OptionsCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isEmptyObject(value: unknown) {\n    return (\n      Object.getPrototypeOf(value) === Object.prototype &&\n      Object.getOwnPropertyNames(value).length === 0 &&\n      Object.getOwnPropertySymbols(value).length === 0\n    )\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let plainAppUrl = appUrl\n    if (appUrl.endsWith('/')) {\n      plainAppUrl = appUrl.slice(0, -1)\n    }\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target = '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    const [href] = wcUri.split('?')\n\n    localStorage.setItem(\n      CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n      JSON.stringify({ href, name: 'Android' })\n    )\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  isNull<T>(value: T | null): value is null {\n    return value === null\n  },\n\n  getWalletConnectVersion() {\n    const { isStandalone } = OptionsCtrl.state\n    let version = 1\n    if (!isStandalone) {\n      version = ClientCtrl.client().walletConnectVersion\n    }\n\n    return version\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ClientCtrl } from './ClientCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: undefined,\n  themeMode: isDarkMode() ? 'dark' : 'light',\n  themeColor: 'default',\n  themeBackground: CoreUtil.isMobile() ? 'themeColor' : 'gradient',\n  themeZIndex: 89,\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chainImages: undefined,\n  tokenImages: undefined,\n  standaloneChains: undefined,\n  enableStandaloneMode: false,\n  enableNetworkView: false,\n  defaultChain: undefined,\n  explorerAllowList: undefined,\n  explorerDenyList: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    OptionsCtrl.setStandaloneChains(config.standaloneChains)\n    OptionsCtrl.setIsStandalone(\n      Boolean(config.standaloneChains?.length) || Boolean(config.enableStandaloneMode)\n    )\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n    OptionsCtrl.setIsExplorer(Boolean(config.projectId?.length))\n\n    if (config.defaultChain) {\n      OptionsCtrl.setSelectedChain(config.defaultChain)\n    } else if (!OptionsCtrl.state.isStandalone) {\n      const chain = ClientCtrl.client().getDefaultChain()\n      OptionsCtrl.setSelectedChain(chain)\n    }\n\n    Object.assign(state, config)\n  },\n\n  setThemeConfig(theme: Pick<ConfigCtrlState, 'themeBackground' | 'themeColor' | 'themeMode'>) {\n    Object.assign(state, theme)\n  }\n}\n","import type { ListingResponse, PageParams } from '../types/controllerTypes'\n\nconst EXPLORER_API = 'https://explorer-api.walletconnect.com'\n\nfunction formatParams(params: PageParams) {\n  const stringParams = Object.fromEntries(\n    Object.entries(params)\n      .filter(([_, value]) => typeof value !== 'undefined' && value !== null && value !== '')\n      .map(([key, value]) => [key, value.toString()])\n  )\n\n  return new URLSearchParams(stringParams).toString()\n}\n\nexport const ExplorerUtil = {\n  async fetchWallets(projectId: string, params: PageParams): Promise<ListingResponse> {\n    const urlParams = formatParams(params)\n    const fetcUrl = `${EXPLORER_API}/v3/wallets?projectId=${projectId}&${urlParams}`\n    const fetched = await fetch(fetcUrl)\n\n    return fetched.json()\n  },\n\n  formatImageUrl(projectId: string, imageId: string) {\n    return `${EXPLORER_API}/v3/logo/lg/${imageId}?projectId=${projectId}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, PageParams } from '../types/controllerTypes'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  previewWallets: [],\n  recomendedWallets: []\n})\n\n// -- helpers ------------------------------------------------------ //\nfunction getProjectId() {\n  const { projectId } = ConfigCtrl.state\n  if (!projectId) {\n    throw new Error('projectId is required to work with explorer api')\n  }\n\n  return projectId\n}\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getPreviewWallets(params: PageParams) {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    state.previewWallets = Object.values(listings)\n\n    return state.previewWallets\n  },\n\n  async getRecomendedWallets() {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), { page: 1, entries: 6 })\n    state.recomendedWallets = Object.values(listings)\n  },\n\n  async getPaginatedWallets(params: PageParams) {\n    const { page, search } = params\n    const { listings: listingsObj, total } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getImageUrl(imageId: string) {\n    return ExplorerUtil.formatImageUrl(getProjectId(), imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri?: string\n  standaloneChains?: string[]\n  route?: 'Account' | 'ConnectWallet' | 'Help' | 'SelectNetwork'\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isConnected, isStandalone, isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      const { enableNetworkView } = ConfigCtrl.state\n\n      if (isStandalone) {\n        OptionsCtrl.setStandaloneUri(options?.uri)\n        OptionsCtrl.setStandaloneChains(options?.standaloneChains)\n        RouterCtrl.replace('ConnectWallet')\n      } else if (options?.route) {\n        RouterCtrl.replace(options.route)\n      } else if (isConnected) {\n        RouterCtrl.replace('Account')\n      } else if (enableNetworkView) {\n        RouterCtrl.replace('SelectNetwork')\n      } else {\n        RouterCtrl.replace('ConnectWallet')\n      }\n\n      // Open modal if async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          if (OptionsCtrl.state.isUiLoaded && OptionsCtrl.state.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n}\n"],"names":["state","proxy","OptionsCtrl","callback","valtioSub","chains","standaloneChains","standaloneUri","selectedChain","ClientCtrl","isStandalone","isCustomDesktop","isCustomMobile","isExplorer","account","address","isConnected","profileName","profileAvatar","profileLoading","balanceLoading","balance","isDataLoaded","isUiLoaded","ethereumClient","CoreUtil","value","url","appUrl","wcUri","name","safeAppUrl","encodedWcUrl","plainAppUrl","miliseconds","resolve","href","target","version","isDarkMode","ConfigCtrl","config","_a","_b","_c","_d","chain","theme","EXPLORER_API","formatParams","params","stringParams","_","key","ExplorerUtil","projectId","urlParams","fetcUrl","imageId","getProjectId","ExplorerCtrl","listings","page","search","listingsObj","total","type","RouterCtrl","view","data","last","ModalCtrl","options","enableNetworkView","interval","ToastCtrl","message","variant","Buffer"],"mappings":"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"}