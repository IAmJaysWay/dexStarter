import{proxy as p,subscribe as f}from"valtio/vanilla";import{Buffer as O}from"buffer";const n=p({selectedChain:void 0,chains:void 0,standaloneChains:void 0,standaloneUri:void 0,address:void 0,profileName:void 0,profileAvatar:void 0,profileLoading:!1,balanceLoading:!1,balance:void 0,isConnected:!1,isStandalone:!1,isCustomDesktop:!1,isCustomMobile:!1,isExplorer:!1,isDataLoaded:!1,isUiLoaded:!1}),a={state:n,subscribe(e){return f(n,()=>e(n))},setChains(e){n.chains=e},setStandaloneChains(e){n.standaloneChains=e},setStandaloneUri(e){n.standaloneUri=e},getSelectedChain(){const e=I.client().getNetwork().chain;return e&&(n.selectedChain=e),n.selectedChain},setSelectedChain(e){n.selectedChain=e},setIsStandalone(e){n.isStandalone=e},setIsCustomDesktop(e){n.isCustomDesktop=e},setIsCustomMobile(e){n.isCustomMobile=e},setIsExplorer(e){n.isExplorer=e},getAccount(){const e=I.client().getAccount();n.address=e.address,n.isConnected=e.isConnected},setAddress(e){n.address=e},setIsConnected(e){n.isConnected=e},setProfileName(e){n.profileName=e},setProfileAvatar(e){n.profileAvatar=e},setProfileLoading(e){n.profileLoading=e},setBalanceLoading(e){n.balanceLoading=e},setBalance(e){n.balance=e},setIsDataLoaded(e){n.isDataLoaded=e},setIsUiLoaded(e){n.isUiLoaded=e},resetEnsProfile(){n.profileName=void 0,n.profileAvatar=void 0},resetBalance(){n.balance=void 0},resetAccount(){n.address=void 0,a.resetEnsProfile(),a.resetBalance()}},h=p({initialized:!1,ethereumClient:void 0}),I={setEthereumClient(e){!h.initialized&&e&&(h.ethereumClient=e,a.setChains(e.chains),h.initialized=!0)},client(){if(h.ethereumClient)return h.ethereumClient;throw new Error("ClientCtrl has no client set")}},c={WALLETCONNECT_DEEPLINK_CHOICE:"WALLETCONNECT_DEEPLINK_CHOICE",isMobile(){return typeof window<"u"?Boolean(window.matchMedia("(pointer:coarse)").matches||/Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)):!1},isAndroid(){return c.isMobile()&&navigator.userAgent.toLowerCase().includes("android")},isEmptyObject(e){return Object.getPrototypeOf(e)===Object.prototype&&Object.getOwnPropertyNames(e).length===0&&Object.getOwnPropertySymbols(e).length===0},isHttpUrl(e){return e.startsWith("http://")||e.startsWith("https://")},formatNativeUrl(e,t,s){if(c.isHttpUrl(e))return this.formatUniversalUrl(e,t,s);let o=e;o.includes("://")||(o=e.replaceAll("/","").replaceAll(":",""),o=`${o}://`),this.setWalletConnectDeepLink(o,s);const l=encodeURIComponent(t);return`${o}wc?uri=${l}`},formatUniversalUrl(e,t,s){if(!c.isHttpUrl(e))return this.formatNativeUrl(e,t,s);let o=e;e.endsWith("/")&&(o=e.slice(0,-1)),this.setWalletConnectDeepLink(o,s);const l=encodeURIComponent(t);return`${o}/wc?uri=${l}`},async wait(e){return new Promise(t=>{setTimeout(t,e)})},openHref(e,t="_self"){window.open(e,t,"noreferrer noopener")},setWalletConnectDeepLink(e,t){localStorage.setItem(c.WALLETCONNECT_DEEPLINK_CHOICE,JSON.stringify({href:e,name:t}))},setWalletConnectAndroidDeepLink(e){const[t]=e.split("?");localStorage.setItem(c.WALLETCONNECT_DEEPLINK_CHOICE,JSON.stringify({href:t,name:"Android"}))},removeWalletConnectDeepLink(){localStorage.removeItem(c.WALLETCONNECT_DEEPLINK_CHOICE)},isNull(e){return e===null},getWalletConnectVersion(){const{isStandalone:e}=a.state;let t=1;return e||(t=I.client().walletConnectVersion),t}};function S(){return typeof matchMedia<"u"&&matchMedia("(prefers-color-scheme: dark)").matches}const g=p({projectId:void 0,themeMode:S()?"dark":"light",themeColor:"default",themeBackground:c.isMobile()?"themeColor":"gradient",themeZIndex:89,mobileWallets:void 0,desktopWallets:void 0,walletImages:void 0,chainImages:void 0,tokenImages:void 0,standaloneChains:void 0,enableStandaloneMode:!1,enableNetworkView:!1,defaultChain:void 0,explorerAllowList:void 0,explorerDenyList:void 0,termsOfServiceUrl:void 0,privacyPolicyUrl:void 0}),E={state:g,subscribe(e){return f(g,()=>e(g))},setConfig(e){var t,s,o,l;if(a.setStandaloneChains(e.standaloneChains),a.setIsStandalone(Boolean((t=e.standaloneChains)==null?void 0:t.length)||Boolean(e.enableStandaloneMode)),a.setIsCustomMobile(Boolean((s=e.mobileWallets)==null?void 0:s.length)),a.setIsCustomDesktop(Boolean((o=e.desktopWallets)==null?void 0:o.length)),a.setIsExplorer(Boolean((l=e.projectId)==null?void 0:l.length)),e.defaultChain)a.setSelectedChain(e.defaultChain);else if(!a.state.isStandalone){const u=I.client().getDefaultChain();a.setSelectedChain(u)}Object.assign(g,e)},setThemeConfig(e){Object.assign(g,e)}},L="https://explorer-api.walletconnect.com";function y(e){const t=Object.fromEntries(Object.entries(e).filter(([s,o])=>typeof o<"u"&&o!==null&&o!=="").map(([s,o])=>[s,o.toString()]));return new URLSearchParams(t).toString()}const w={async fetchWallets(e,t){const s=y(t),o=`${L}/v3/wallets?projectId=${e}&${s}`;return(await fetch(o)).json()},formatImageUrl(e,t){return`${L}/v3/logo/lg/${t}?projectId=${e}`}},r=p({wallets:{listings:[],total:0,page:1},search:{listings:[],total:0,page:1},previewWallets:[],recomendedWallets:[]});function b(){const{projectId:e}=E.state;if(!e)throw new Error("projectId is required to work with explorer api");return e}const A={state:r,async getPreviewWallets(e){const{listings:t}=await w.fetchWallets(b(),e);return r.previewWallets=Object.values(t),r.previewWallets},async getRecomendedWallets(){const{listings:e}=await w.fetchWallets(b(),{page:1,entries:6});r.recomendedWallets=Object.values(e)},async getPaginatedWallets(e){const{page:t,search:s}=e,{listings:o,total:l}=await w.fetchWallets(b(),e),u=Object.values(o),v=s?"search":"wallets";return r[v]={listings:[...r[v].listings,...u],total:l,page:t??1},{listings:u,total:l}},getImageUrl(e){return w.formatImageUrl(b(),e)},resetSearch(){r.search={listings:[],total:0,page:1}}},i=p({history:["ConnectWallet"],view:"ConnectWallet",data:void 0}),m={state:i,subscribe(e){return f(i,()=>e(i))},push(e,t){e!==i.view&&(i.view=e,t&&(i.data=t),i.history.push(e))},replace(e){i.view=e,i.history=[e]},goBack(){if(i.history.length>1){i.history.pop();const[e]=i.history.slice(-1);i.view=e}}},C=p({open:!1}),k={state:C,subscribe(e){return f(C,()=>e(C))},async open(e){return new Promise(t=>{const{isConnected:s,isStandalone:o,isUiLoaded:l,isDataLoaded:u}=a.state,{enableNetworkView:v}=E.state;if(o?(a.setStandaloneUri(e?.uri),a.setStandaloneChains(e?.standaloneChains),m.replace("ConnectWallet")):e!=null&&e.route?m.replace(e.route):s?m.replace("Account"):v?m.replace("SelectNetwork"):m.replace("ConnectWallet"),l&&u)C.open=!0,t();else{const W=setInterval(()=>{a.state.isUiLoaded&&a.state.isDataLoaded&&(clearInterval(W),C.open=!0,t())},200)}})},close(){C.open=!1}},d=p({open:!1,message:"",variant:"success"}),P={state:d,subscribe(e){return f(d,()=>e(d))},openToast(e,t){d.open=!0,d.message=e,d.variant=t},closeToast(){d.open=!1}};typeof window<"u"&&(window.Buffer||(window.Buffer=O),window.global||(window.global=window),window.process||(window.process={env:{}}));export{I as ClientCtrl,E as ConfigCtrl,c as CoreUtil,A as ExplorerCtrl,k as ModalCtrl,a as OptionsCtrl,m as RouterCtrl,P as ToastCtrl};
//# sourceMappingURL=index.js.map
