{"version":3,"file":"index.es.js","sources":["../src/constants/client.ts","../src/constants/history.ts","../src/constants/proposal.ts","../src/constants/session.ts","../src/constants/engine.ts","../src/constants/pendingRequest.ts","../src/controllers/engine.ts","../src/controllers/proposal.ts","../src/controllers/session.ts","../src/controllers/pendingRequest.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["import { SignClientTypes } from \"@walletconnect/types\";\n\nexport const SIGN_CLIENT_PROTOCOL = \"wc\";\nexport const SIGN_CLIENT_VERSION = 2;\nexport const SIGN_CLIENT_CONTEXT = \"client\";\n\nexport const SIGN_CLIENT_STORAGE_PREFIX = `${SIGN_CLIENT_PROTOCOL}@${SIGN_CLIENT_VERSION}:${SIGN_CLIENT_CONTEXT}:`;\n\nexport const SIGN_CLIENT_DEFAULT = {\n  name: SIGN_CLIENT_CONTEXT,\n  logger: \"error\",\n  controller: false,\n  relayUrl: \"wss://relay.walletconnect.com\",\n};\n\nexport const SIGN_CLIENT_EVENTS: Record<SignClientTypes.Event, SignClientTypes.Event> = {\n  session_proposal: \"session_proposal\",\n  session_update: \"session_update\",\n  session_extend: \"session_extend\",\n  session_ping: \"session_ping\",\n  session_delete: \"session_delete\",\n  session_expire: \"session_expire\",\n  session_request: \"session_request\",\n  session_event: \"session_event\",\n  proposal_expire: \"proposal_expire\",\n};\n\nexport const SIGN_CLIENT_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PROPOSAL_CONTEXT = \"proposal\";\n\nexport const PROPOSAL_EXPIRY = THIRTY_DAYS;\n","import { SEVEN_DAYS } from \"@walletconnect/time\";\n\nexport const SESSION_CONTEXT = \"session\";\n\nexport const SESSION_EXPIRY = SEVEN_DAYS;\n","import { FIVE_MINUTES, ONE_DAY, SEVEN_DAYS, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { EngineTypes } from \"@walletconnect/types\";\n\nexport const ENGINE_CONTEXT = \"engine\";\n\nexport const ENGINE_RPC_OPTS: EngineTypes.RpcOptsMap = {\n  wc_sessionPropose: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1100,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1101,\n    },\n  },\n  wc_sessionSettle: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1102,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1103,\n    },\n  },\n  wc_sessionUpdate: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1104,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1105,\n    },\n  },\n  wc_sessionExtend: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1106,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1107,\n    },\n  },\n  wc_sessionRequest: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1108,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1109,\n    },\n  },\n  wc_sessionEvent: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1110,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1111,\n    },\n  },\n\n  wc_sessionDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1112,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1113,\n    },\n  },\n  wc_sessionPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1114,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1115,\n    },\n  },\n};\n\nexport const SESSION_REQUEST_EXPIRY_BOUNDARIES = {\n  min: FIVE_MINUTES,\n  max: SEVEN_DAYS,\n};\n","export const REQUEST_CONTEXT = \"request\";\n","/* eslint-disable no-console */\nimport EventEmmiter from \"events\";\nimport { RELAYER_EVENTS, EXPIRER_EVENTS, RELAYER_DEFAULT_PROTOCOL } from \"@walletconnect/core\";\nimport {\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  formatJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  isJsonRpcError,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES } from \"@walletconnect/time\";\nimport {\n  IEngine,\n  EngineTypes,\n  IEngineEvents,\n  RelayerTypes,\n  EnginePrivate,\n  SessionTypes,\n  JsonRpcTypes,\n  ExpirerTypes,\n  PendingRequestTypes,\n} from \"@walletconnect/types\";\nimport {\n  calcExpiry,\n  parseExpirerTarget,\n  createDelayedPromise,\n  getInternalError,\n  getSdkError,\n  engineEvent,\n  isValidNamespaces,\n  isValidRelays,\n  isValidRelay,\n  isValidId,\n  isValidParams,\n  isValidString,\n  isValidErrorReason,\n  isValidNamespacesChainId,\n  isValidNamespacesRequest,\n  isValidNamespacesEvent,\n  isValidRequest,\n  isValidEvent,\n  isValidResponse,\n  isValidRequiredNamespaces,\n  isSessionCompatible,\n  isExpired,\n  isUndefined,\n  isConformingNamespaces,\n  isValidController,\n  TYPE_1,\n  getRequiredNamespacesFromNamespaces,\n  isValidObject,\n  isValidRequestExpiry,\n} from \"@walletconnect/utils\";\nimport {\n  SESSION_EXPIRY,\n  ENGINE_CONTEXT,\n  ENGINE_RPC_OPTS,\n  SESSION_REQUEST_EXPIRY_BOUNDARIES,\n} from \"../constants\";\n\nexport class Engine extends IEngine {\n  public name = ENGINE_CONTEXT;\n\n  private events: IEngineEvents = new EventEmmiter();\n  private initialized = false;\n  private ignoredPayloadTypes = [TYPE_1];\n\n  constructor(client: IEngine[\"client\"]) {\n    super(client);\n  }\n\n  public init: IEngine[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.client.core.pairing.register({ methods: Object.keys(ENGINE_RPC_OPTS) });\n      this.initialized = true;\n    }\n  };\n\n  // ---------- Public ------------------------------------------------ //\n\n  public connect: IEngine[\"connect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidConnect(params);\n    const { pairingTopic, requiredNamespaces, relays } = params;\n    let topic = pairingTopic;\n    let uri: string | undefined;\n    let active = false;\n\n    if (topic) {\n      const pairing = this.client.core.pairing.pairings.get(topic);\n      active = pairing.active;\n    }\n\n    if (!topic || !active) {\n      const { topic: newTopic, uri: newUri } = await this.client.core.pairing.create();\n      topic = newTopic;\n      uri = newUri;\n    }\n\n    const publicKey = await this.client.core.crypto.generateKeyPair();\n\n    const proposal = {\n      requiredNamespaces,\n      relays: relays ?? [{ protocol: RELAYER_DEFAULT_PROTOCOL }],\n      proposer: {\n        publicKey,\n        metadata: this.client.metadata,\n      },\n    };\n\n    const { reject, resolve, done: approval } = createDelayedPromise<SessionTypes.Struct>();\n    this.events.once<\"session_connect\">(\n      engineEvent(\"session_connect\"),\n      async ({ error, session }) => {\n        if (error) reject(error);\n        else if (session) {\n          session.self.publicKey = publicKey;\n          const completeSession = { ...session, requiredNamespaces: session.requiredNamespaces };\n          await this.client.session.set(session.topic, completeSession);\n          await this.setExpiry(session.topic, session.expiry);\n          if (topic) {\n            await this.client.core.pairing.updateMetadata({\n              topic,\n              metadata: session.peer.metadata,\n            });\n          }\n          resolve(completeSession);\n        }\n      },\n    );\n\n    if (!topic) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `connect() pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n\n    const id = await this.sendRequest(topic, \"wc_sessionPropose\", proposal);\n\n    const expiry = calcExpiry(FIVE_MINUTES);\n    await this.setProposal(id, { id, expiry, ...proposal });\n    return { uri, approval };\n  };\n\n  public pair: IEngine[\"pair\"] = async (params) => {\n    this.isInitialized();\n    return await this.client.core.pairing.pair(params);\n  };\n\n  public approve: IEngine[\"approve\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidApprove(params);\n    const { id, relayProtocol, namespaces } = params;\n    const proposal = this.client.proposal.get(id);\n    let { pairingTopic, proposer, requiredNamespaces } = proposal;\n\n    if (!isValidObject(requiredNamespaces)) {\n      const required = getRequiredNamespacesFromNamespaces(namespaces, \"approve()\");\n      requiredNamespaces = required;\n      // update the proposal with the new required namespaces\n      this.client.proposal.set(id, { ...proposal, requiredNamespaces });\n    }\n\n    const selfPublicKey = await this.client.core.crypto.generateKeyPair();\n    const peerPublicKey = proposer.publicKey;\n    const sessionTopic = await this.client.core.crypto.generateSharedKey(\n      selfPublicKey,\n      peerPublicKey,\n    );\n    const sessionSettle = {\n      relay: { protocol: relayProtocol ?? \"irn\" },\n      namespaces,\n      requiredNamespaces,\n      controller: { publicKey: selfPublicKey, metadata: this.client.metadata },\n      expiry: calcExpiry(SESSION_EXPIRY),\n    };\n\n    await this.client.core.relayer.subscribe(sessionTopic);\n    const requestId = await this.sendRequest(sessionTopic, \"wc_sessionSettle\", sessionSettle);\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<SessionTypes.Struct>();\n    this.events.once(engineEvent(\"session_approve\", requestId), ({ error }) => {\n      if (error) reject(error);\n      else resolve(this.client.session.get(sessionTopic));\n    });\n\n    const session = {\n      ...sessionSettle,\n      topic: sessionTopic,\n      acknowledged: false,\n      self: sessionSettle.controller,\n      peer: {\n        publicKey: proposer.publicKey,\n        metadata: proposer.metadata,\n      },\n      controller: selfPublicKey,\n    };\n    await this.client.session.set(sessionTopic, session);\n    await this.setExpiry(sessionTopic, calcExpiry(SESSION_EXPIRY));\n    if (pairingTopic) {\n      await this.client.core.pairing.updateMetadata({\n        topic: pairingTopic,\n        metadata: session.peer.metadata,\n      });\n    }\n    if (pairingTopic && id) {\n      await this.sendResult<\"wc_sessionPropose\">(id, pairingTopic, {\n        relay: {\n          protocol: relayProtocol ?? \"irn\",\n        },\n        responderPublicKey: selfPublicKey,\n      });\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      await this.client.core.pairing.activate({ topic: pairingTopic });\n    }\n\n    return { topic: sessionTopic, acknowledged };\n  };\n\n  public reject: IEngine[\"reject\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidReject(params);\n    const { id, reason } = params;\n    const { pairingTopic } = this.client.proposal.get(id);\n    if (pairingTopic) {\n      await this.sendError(id, pairingTopic, reason);\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n    }\n  };\n\n  public update: IEngine[\"update\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidUpdate(params);\n    const { topic, namespaces } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionUpdate\", { namespaces });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_update\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.client.session.update(topic, { namespaces });\n\n    return { acknowledged };\n  };\n\n  public extend: IEngine[\"extend\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidExtend(params);\n    const { topic } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionExtend\", {});\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_extend\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n\n    return { acknowledged };\n  };\n\n  public request: IEngine[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    this.isInitialized();\n    await this.isValidRequest(params);\n    const { chainId, request, topic, expiry } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionRequest\", { request, chainId }, expiry);\n    const { done, resolve, reject } = createDelayedPromise<T>(expiry);\n    this.events.once<\"session_request\">(engineEvent(\"session_request\", id), ({ error, result }) => {\n      if (error) reject(error);\n      else resolve(result);\n    });\n    return await done();\n  };\n\n  public respond: IEngine[\"respond\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidRespond(params);\n    const { topic, response } = params;\n    const { id } = response;\n    if (isJsonRpcResult(response)) {\n      await this.sendResult(id, topic, response.result);\n    } else if (isJsonRpcError(response)) {\n      await this.sendError(id, topic, response.error);\n    }\n    this.deletePendingSessionRequest(params.response.id, { message: \"fulfilled\", code: 0 });\n  };\n\n  public ping: IEngine[\"ping\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_sessionPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"session_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      await this.client.core.pairing.ping({ topic });\n    }\n  };\n\n  public emit: IEngine[\"emit\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidEmit(params);\n    const { topic, event, chainId } = params;\n    await this.sendRequest(topic, \"wc_sessionEvent\", { event, chainId });\n  };\n\n  public disconnect: IEngine[\"disconnect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_sessionDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deleteSession(topic);\n    } else {\n      await this.client.core.pairing.disconnect({ topic });\n    }\n  };\n\n  public find: IEngine[\"find\"] = (params) => {\n    this.isInitialized();\n    return this.client.session.getAll().filter((session) => isSessionCompatible(session, params));\n  };\n\n  public getPendingSessionRequests: IEngine[\"getPendingSessionRequests\"] = () => {\n    this.isInitialized();\n    return this.client.pendingRequest.getAll();\n  };\n\n  // ---------- Private Helpers --------------------------------------- //\n\n  private deleteSession: EnginePrivate[\"deleteSession\"] = async (topic, expirerHasDeleted) => {\n    const { self } = this.client.session.get(topic);\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.client.core.relayer.unsubscribe(topic);\n    await Promise.all([\n      this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.client.core.crypto.deleteKeyPair(self.publicKey),\n      this.client.core.crypto.deleteSymKey(topic),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(topic),\n    ]);\n  };\n\n  private deleteProposal: EnginePrivate[\"deleteProposal\"] = async (id, expirerHasDeleted) => {\n    await Promise.all([\n      this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\")),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private deletePendingSessionRequest: EnginePrivate[\"deletePendingSessionRequest\"] = async (\n    id,\n    reason,\n    expirerHasDeleted = false,\n  ) => {\n    await Promise.all([\n      this.client.pendingRequest.delete(id, reason),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private setExpiry: EnginePrivate[\"setExpiry\"] = async (topic, expiry) => {\n    if (this.client.session.keys.includes(topic)) {\n      await this.client.session.update(topic, { expiry });\n    }\n    this.client.core.expirer.set(topic, expiry);\n  };\n\n  private setProposal: EnginePrivate[\"setProposal\"] = async (id, proposal) => {\n    await this.client.proposal.set(id, proposal);\n    this.client.core.expirer.set(id, proposal.expiry);\n  };\n\n  private setPendingSessionRequest: EnginePrivate[\"setPendingSessionRequest\"] = async (\n    pendingRequest: PendingRequestTypes.Struct,\n  ) => {\n    const expiry = ENGINE_RPC_OPTS.wc_sessionRequest.req.ttl;\n    const { id, topic, params } = pendingRequest;\n    await this.client.pendingRequest.set(id, {\n      id,\n      topic,\n      params,\n    });\n    if (expiry) this.client.core.expirer.set(id, calcExpiry(expiry));\n  };\n\n  private sendRequest: EnginePrivate[\"sendRequest\"] = async (topic, method, params, expiry) => {\n    const payload = formatJsonRpcRequest(method, params);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const opts = ENGINE_RPC_OPTS[method].req;\n    if (expiry) opts.ttl = expiry;\n    this.client.core.history.set(topic, payload);\n    this.client.core.relayer.publish(topic, message, opts);\n    return payload.id;\n  };\n\n  private sendResult: EnginePrivate[\"sendResult\"] = async (id, topic, result) => {\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private sendError: EnginePrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private cleanup: EnginePrivate[\"cleanup\"] = async () => {\n    const sessionTopics: string[] = [];\n    const proposalIds: number[] = [];\n    this.client.session.getAll().forEach((session) => {\n      if (isExpired(session.expiry)) sessionTopics.push(session.topic);\n    });\n    this.client.proposal.getAll().forEach((proposal) => {\n      if (isExpired(proposal.expiry)) proposalIds.push(proposal.id);\n    });\n    await Promise.all([\n      ...sessionTopics.map((topic) => this.deleteSession(topic)),\n      ...proposalIds.map((id) => this.deleteProposal(id)),\n    ]);\n  };\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.client.core.relayer.on(\n      RELAYER_EVENTS.message,\n      async (event: RelayerTypes.MessageEvent) => {\n        const { topic, message } = event;\n\n        // messages of certain types should be ignored as they are handled by their respective SDKs\n        if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(message))) {\n          return;\n        }\n\n        const payload = await this.client.core.crypto.decode(topic, message);\n        if (isJsonRpcRequest(payload)) {\n          this.client.core.history.set(topic, payload);\n          this.onRelayEventRequest({ topic, payload });\n        } else if (isJsonRpcResponse(payload)) {\n          await this.client.core.history.resolve(payload);\n          this.onRelayEventResponse({ topic, payload });\n        }\n      },\n    );\n  }\n\n  private onRelayEventRequest: EnginePrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as JsonRpcTypes.WcMethod;\n\n    switch (reqMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeRequest(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleRequest(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateRequest(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendRequest(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingRequest(topic, payload);\n      case \"wc_sessionDelete\":\n        return this.onSessionDeleteRequest(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequest(topic, payload);\n      case \"wc_sessionEvent\":\n        return this.onSessionEventRequest(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported request method ${reqMethod}`);\n    }\n  };\n\n  private onRelayEventResponse: EnginePrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.client.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as JsonRpcTypes.WcMethod;\n\n    switch (resMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeResponse(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleResponse(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateResponse(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendResponse(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingResponse(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequestResponse(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported response method ${resMethod}`);\n    }\n  };\n\n  // ---------- Relay Events Handlers --------------------------------- //\n\n  private onSessionProposeRequest: EnginePrivate[\"onSessionProposeRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidConnect({ ...payload.params });\n      const expiry = calcExpiry(FIVE_MINUTES);\n      const proposal = { id, pairingTopic: topic, expiry, ...params };\n      await this.setProposal(id, proposal);\n      this.client.events.emit(\"session_proposal\", { id, params: proposal });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionProposeResponse: EnginePrivate[\"onSessionProposeResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      const { result } = payload;\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", result });\n      const proposal = this.client.proposal.get(id);\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", proposal });\n      const selfPublicKey = proposal.proposer.publicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        selfPublicKey,\n      });\n      const peerPublicKey = result.responderPublicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        peerPublicKey,\n      });\n      const sessionTopic = await this.client.core.crypto.generateSharedKey(\n        selfPublicKey,\n        peerPublicKey,\n      );\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        sessionTopic,\n      });\n      const subscriptionId = await this.client.core.relayer.subscribe(sessionTopic);\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        subscriptionId,\n      });\n      await this.client.core.pairing.activate({ topic });\n    } else if (isJsonRpcError(payload)) {\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_connect\"), { error: payload.error });\n    }\n  };\n\n  private onSessionSettleRequest: EnginePrivate[\"onSessionSettleRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidSessionSettleRequest(params);\n      const { relay, controller, expiry, namespaces, requiredNamespaces } = payload.params;\n      const session = {\n        topic,\n        relay,\n        expiry,\n        namespaces,\n        acknowledged: true,\n        requiredNamespaces,\n        controller: controller.publicKey,\n        self: {\n          publicKey: \"\",\n          metadata: this.client.metadata,\n        },\n        peer: {\n          publicKey: controller.publicKey,\n          metadata: controller.metadata,\n        },\n      };\n      await this.sendResult<\"wc_sessionSettle\">(payload.id, topic, true);\n      this.events.emit(engineEvent(\"session_connect\"), { session });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionSettleResponse: EnginePrivate[\"onSessionSettleResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      await this.client.session.update(topic, { acknowledged: true });\n      this.events.emit(engineEvent(\"session_approve\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      await this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_approve\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionUpdateRequest: EnginePrivate[\"onSessionUpdateRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidUpdate({ topic, ...params });\n      await this.client.session.update(topic, { namespaces: params.namespaces });\n      await this.sendResult<\"wc_sessionUpdate\">(id, topic, true);\n      this.client.events.emit(\"session_update\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionUpdateResponse: EnginePrivate[\"onSessionUpdateResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionExtendRequest: EnginePrivate[\"onSessionExtendRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidExtend({ topic });\n      await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n      await this.sendResult<\"wc_sessionExtend\">(id, topic, true);\n      this.client.events.emit(\"session_extend\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionExtendResponse: EnginePrivate[\"onSessionExtendResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionPingRequest: EnginePrivate[\"onSessionPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_sessionPing\">(id, topic, true);\n      this.client.events.emit(\"session_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionPingResponse: EnginePrivate[\"onSessionPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where session_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onSessionDeleteRequest: EnginePrivate[\"onSessionDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      // RPC request needs to happen before deletion as it utalises session encryption\n      await this.sendResult<\"wc_sessionDelete\">(id, topic, true);\n      await this.deleteSession(topic);\n      this.client.events.emit(\"session_delete\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequest: EnginePrivate[\"onSessionRequest\"] = async (topic, payload) => {\n    const { id, params } = payload;\n    try {\n      this.isValidRequest({ topic, ...params });\n      await this.setPendingSessionRequest({ id, topic, params });\n      this.client.events.emit(\"session_request\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequestResponse: EnginePrivate[\"onSessionRequestResponse\"] = (\n    _topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { result: payload.result });\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionEventRequest: EnginePrivate[\"onSessionEventRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidEmit({ topic, ...params });\n      this.client.events.emit(\"session_event\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.client.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic, id } = parseExpirerTarget(event.target);\n      if (id && this.client.pendingRequest.keys.includes(id)) {\n        return await this.deletePendingSessionRequest(id, getInternalError(\"EXPIRED\"), true);\n      }\n\n      if (topic) {\n        if (this.client.session.keys.includes(topic)) {\n          await this.deleteSession(topic, true);\n          this.client.events.emit(\"session_expire\", { topic });\n        }\n      } else if (id) {\n        await this.deleteProposal(id, true);\n      }\n    });\n  }\n\n  // ---------- Validation Helpers ------------------------------------ //\n  private isValidPairingTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.core.pairing.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.core.pairing.pairings.get(topic).expiry)) {\n      // await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.session.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.session.get(topic).expiry)) {\n      await this.deleteSession(topic);\n      const { message } = getInternalError(\"EXPIRED\", `session topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionOrPairingTopic(topic: string) {\n    if (this.client.session.keys.includes(topic)) {\n      await this.isValidSessionTopic(topic);\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      this.isValidPairingTopic(topic);\n    } else if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session or pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    } else {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session or pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n  }\n\n  private async isValidProposalId(id: any) {\n    if (!isValidId(id)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `proposal id should be a number: ${id}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.proposal.keys.includes(id)) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${id}`);\n      throw new Error(message);\n    }\n    if (isExpired(this.client.proposal.get(id).expiry)) {\n      await this.deleteProposal(id);\n      const { message } = getInternalError(\"EXPIRED\", `proposal id: ${id}`);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Validation  ------------------------------------------- //\n\n  private isValidConnect: EnginePrivate[\"isValidConnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `connect() params: ${JSON.stringify(params)}`,\n      );\n      throw new Error(message);\n    }\n    const { pairingTopic, requiredNamespaces, relays } = params;\n    if (!isUndefined(pairingTopic)) await this.isValidPairingTopic(pairingTopic);\n\n    // validate required namespaces only if they are defined\n    if (!isUndefined(requiredNamespaces) && isValidObject(requiredNamespaces) === 0) {\n      return;\n    }\n\n    const validRequiredNamespacesError = isValidRequiredNamespaces(requiredNamespaces, \"connect()\");\n    if (validRequiredNamespacesError) throw new Error(validRequiredNamespacesError.message);\n    if (!isValidRelays(relays, true)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `connect() relays: ${relays}`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidApprove: EnginePrivate[\"isValidApprove\"] = async (params) => {\n    if (!isValidParams(params))\n      throw new Error(\n        getInternalError(\"MISSING_OR_INVALID\", `approve() params: ${params}`).message,\n      );\n    const { id, namespaces, relayProtocol } = params;\n    await this.isValidProposalId(id);\n    const proposal = this.client.proposal.get(id);\n    const validNamespacesError = isValidNamespaces(namespaces, \"approve()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      proposal.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    if (!isValidString(relayProtocol, true)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `approve() relayProtocol: ${relayProtocol}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidReject: EnginePrivate[\"isValidReject\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `reject() params: ${params}`);\n      throw new Error(message);\n    }\n    const { id, reason } = params;\n    await this.isValidProposalId(id);\n    if (!isValidErrorReason(reason)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `reject() reason: ${JSON.stringify(reason)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidSessionSettleRequest: EnginePrivate[\"isValidSessionSettleRequest\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() params: ${params}`,\n      );\n      throw new Error(message);\n    }\n    const { relay, controller, namespaces, expiry } = params;\n    if (!isValidRelay(relay)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() relay protocol should be a string`,\n      );\n      throw new Error(message);\n    }\n    const validControllerError = isValidController(controller, \"onSessionSettleRequest()\");\n    if (validControllerError) throw new Error(validControllerError.message);\n    const validNamespacesError = isValidNamespaces(namespaces, \"onSessionSettleRequest()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    if (isExpired(expiry)) {\n      const { message } = getInternalError(\"EXPIRED\", `onSessionSettleRequest()`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidUpdate: EnginePrivate[\"isValidUpdate\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `update() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, namespaces } = params;\n    await this.isValidSessionTopic(topic);\n    const session = this.client.session.get(topic);\n    const validNamespacesError = isValidNamespaces(namespaces, \"update()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      session.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidExtend: EnginePrivate[\"isValidExtend\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `extend() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionTopic(topic);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidRequest: EnginePrivate[\"isValidRequest\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, request, chainId, expiry } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidRequest(request)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() ${JSON.stringify(request)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesRequest(namespaces, chainId, request.method)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() method: ${request.method}`,\n      );\n      throw new Error(message);\n    }\n    if (expiry && !isValidRequestExpiry(expiry, SESSION_REQUEST_EXPIRY_BOUNDARIES)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() expiry: ${expiry}. Expiry must be a number (in seconds) between ${SESSION_REQUEST_EXPIRY_BOUNDARIES.min} and ${SESSION_REQUEST_EXPIRY_BOUNDARIES.max}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidRespond: EnginePrivate[\"isValidRespond\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `respond() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, response } = params;\n    await this.isValidSessionTopic(topic);\n    if (!isValidResponse(response)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `respond() response: ${JSON.stringify(response)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing: EnginePrivate[\"isValidPing\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private isValidEmit: EnginePrivate[\"isValidEmit\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, event, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidEvent(event)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesEvent(namespaces, chainId, event.name)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidDisconnect: EnginePrivate[\"isValidDisconnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, ProposalTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PROPOSAL_CONTEXT } from \"../constants\";\n\nexport class Proposal extends Store<number, ProposalTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PROPOSAL_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, SessionTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, SESSION_CONTEXT } from \"../constants\";\n\nexport class Session extends Store<string, SessionTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, SESSION_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, PendingRequestTypes } from \"@walletconnect/types\";\nimport { REQUEST_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX } from \"../constants\";\n\nexport class PendingRequest extends Store<number, PendingRequestTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, REQUEST_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import pino from \"pino\";\nimport { Core } from \"@walletconnect/core\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n} from \"@walletconnect/logger\";\nimport { SignClientTypes, ISignClient, ISignClientEvents, EngineTypes } from \"@walletconnect/types\";\nimport { getAppMetadata } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { SIGN_CLIENT_DEFAULT, SIGN_CLIENT_PROTOCOL, SIGN_CLIENT_VERSION } from \"./constants\";\nimport { Engine, PendingRequest, Proposal, Session } from \"./controllers\";\n\nexport class SignClient extends ISignClient {\n  public readonly protocol = SIGN_CLIENT_PROTOCOL;\n  public readonly version = SIGN_CLIENT_VERSION;\n  public readonly name: ISignClient[\"name\"] = SIGN_CLIENT_DEFAULT.name;\n  public readonly metadata: ISignClient[\"metadata\"];\n\n  public core: ISignClient[\"core\"];\n  public logger: ISignClient[\"logger\"];\n  public events: ISignClient[\"events\"] = new EventEmitter();\n  public engine: ISignClient[\"engine\"];\n  public session: ISignClient[\"session\"];\n  public proposal: ISignClient[\"proposal\"];\n  public pendingRequest: ISignClient[\"pendingRequest\"];\n\n  static async init(opts?: SignClientTypes.Options) {\n    const client = new SignClient(opts);\n    await client.initialize();\n\n    return client;\n  }\n\n  constructor(opts?: SignClientTypes.Options) {\n    super(opts);\n\n    this.name = opts?.name || SIGN_CLIENT_DEFAULT.name;\n    this.metadata = opts?.metadata || getAppMetadata();\n\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || SIGN_CLIENT_DEFAULT.logger }));\n\n    this.core = opts?.core || new Core(opts);\n    this.logger = generateChildLogger(logger, this.name);\n    this.session = new Session(this.core, this.logger);\n    this.proposal = new Proposal(this.core, this.logger);\n    this.pendingRequest = new PendingRequest(this.core, this.logger);\n    this.engine = new Engine(this);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get pairing() {\n    return this.core.pairing.pairings;\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on: ISignClientEvents[\"on\"] = (name, listener) => {\n    return this.events.on(name, listener);\n  };\n\n  public once: ISignClientEvents[\"once\"] = (name, listener) => {\n    return this.events.once(name, listener);\n  };\n\n  public off: ISignClientEvents[\"off\"] = (name, listener) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener: ISignClientEvents[\"removeListener\"] = (name, listener) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  public removeAllListeners: ISignClientEvents[\"removeAllListeners\"] = (name) => {\n    return this.events.removeAllListeners(name);\n  };\n\n  // ---------- Engine ----------------------------------------------- //\n\n  public connect: ISignClient[\"connect\"] = async (params) => {\n    try {\n      return await this.engine.connect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public pair: ISignClient[\"pair\"] = async (params) => {\n    try {\n      return await this.engine.pair(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approve: ISignClient[\"approve\"] = async (params) => {\n    try {\n      return await this.engine.approve(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public reject: ISignClient[\"reject\"] = async (params) => {\n    try {\n      return await this.engine.reject(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public update: ISignClient[\"update\"] = async (params) => {\n    try {\n      return await this.engine.update(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public extend: ISignClient[\"extend\"] = async (params) => {\n    try {\n      return await this.engine.extend(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public request: ISignClient[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    try {\n      return await this.engine.request<T>(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public respond: ISignClient[\"respond\"] = async (params) => {\n    try {\n      return await this.engine.respond(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public ping: ISignClient[\"ping\"] = async (params) => {\n    try {\n      return await this.engine.ping(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public emit: ISignClient[\"emit\"] = async (params) => {\n    try {\n      return await this.engine.emit(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public disconnect: ISignClient[\"disconnect\"] = async (params) => {\n    try {\n      return await this.engine.disconnect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public find: ISignClient[\"find\"] = (params) => {\n    try {\n      return this.engine.find(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public getPendingSessionRequests: ISignClient[\"getPendingSessionRequests\"] = () => {\n    try {\n      return this.engine.getPendingSessionRequests();\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.core.start();\n      await this.session.init();\n      await this.proposal.init();\n      await this.pendingRequest.init();\n      await this.engine.init();\n      this.logger.info(`SignClient Initialization Success`);\n    } catch (error: any) {\n      this.logger.info(`SignClient Initialization Failure`);\n      this.logger.error(error.message);\n      throw error;\n    }\n  }\n}\n","import { SignClient as Client } from \"./client\";\n\nexport * from \"./constants\";\n\nexport const SignClient = Client;\nexport default Client;\n"],"names":["THIRTY_DAYS","SEVEN_DAYS","FIVE_MINUTES","ONE_DAY","THIRTY_SECONDS","IEngine","client","ENGINE_CONTEXT","EventEmmiter","TYPE_1","ENGINE_RPC_OPTS","params","pairingTopic","requiredNamespaces","relays","topic","uri","active","newTopic","newUri","publicKey","proposal","RELAYER_DEFAULT_PROTOCOL","reject","resolve","approval","createDelayedPromise","engineEvent","error","session","completeSession","__spreadProps","__spreadValues","message","getInternalError","id","expiry","calcExpiry","relayProtocol","namespaces","proposer","isValidObject","getRequiredNamespacesFromNamespaces","selfPublicKey","peerPublicKey","sessionTopic","sessionSettle","SESSION_EXPIRY","requestId","acknowledged","getSdkError","reason","chainId","request","done","result","response","isJsonRpcResult","isJsonRpcError","event","isSessionCompatible","expirerHasDeleted","self","pendingRequest","method","payload","formatJsonRpcRequest","opts","formatJsonRpcResult","record","formatJsonRpcError","sessionTopics","proposalIds","isExpired","reqMethod","resMethod","err","subscriptionId","relay","controller","_topic","isValidParams","isUndefined","validRequiredNamespacesError","isValidRequiredNamespaces","isValidRelays","validNamespacesError","isValidNamespaces","conformingNamespacesError","isConformingNamespaces","isValidString","isValidErrorReason","isValidRelay","validControllerError","isValidController","isValidNamespacesChainId","isValidRequest","isValidNamespacesRequest","isValidRequestExpiry","SESSION_REQUEST_EXPIRY_BOUNDARIES","isValidResponse","isValidEvent","isValidNamespacesEvent","RELAYER_EVENTS","isJsonRpcRequest","isJsonRpcResponse","EXPIRER_EVENTS","parseExpirerTarget","isValidId","Store","core","logger","PROPOSAL_CONTEXT","SIGN_CLIENT_STORAGE_PREFIX","SESSION_CONTEXT","REQUEST_CONTEXT","SignClient","ISignClient","SIGN_CLIENT_PROTOCOL","SIGN_CLIENT_VERSION","SIGN_CLIENT_DEFAULT","EventEmitter","name","listener","getAppMetadata","pino","getDefaultLoggerOptions","Core","generateChildLogger","Session","Proposal","PendingRequest","Engine","getLoggerContext","Client"],"mappings":"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"}