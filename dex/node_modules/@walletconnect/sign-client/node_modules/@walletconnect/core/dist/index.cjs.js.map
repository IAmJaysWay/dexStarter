{"version":3,"file":"index.cjs.js","sources":["../../../node_modules/multiformats/esm/vendor/base-x.js","../../../node_modules/multiformats/esm/src/bytes.js","../../../node_modules/multiformats/esm/src/bases/base.js","../../../node_modules/multiformats/esm/src/bases/identity.js","../../../node_modules/multiformats/esm/src/bases/base2.js","../../../node_modules/multiformats/esm/src/bases/base8.js","../../../node_modules/multiformats/esm/src/bases/base10.js","../../../node_modules/multiformats/esm/src/bases/base16.js","../../../node_modules/multiformats/esm/src/bases/base32.js","../../../node_modules/multiformats/esm/src/bases/base36.js","../../../node_modules/multiformats/esm/src/bases/base58.js","../../../node_modules/multiformats/esm/src/bases/base64.js","../../../node_modules/multiformats/esm/src/bases/base256emoji.js","../../../node_modules/multiformats/esm/vendor/varint.js","../../../node_modules/multiformats/esm/src/varint.js","../../../node_modules/multiformats/esm/src/hashes/digest.js","../../../node_modules/multiformats/esm/src/hashes/hasher.js","../../../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../../node_modules/multiformats/esm/src/hashes/identity.js","../../../node_modules/multiformats/esm/src/codecs/json.js","../../../node_modules/multiformats/esm/src/basics.js","../../../node_modules/uint8arrays/esm/src/alloc.js","../../../node_modules/uint8arrays/esm/src/util/bases.js","../../../node_modules/uint8arrays/esm/src/from-string.js","../src/constants/core.ts","../src/constants/crypto.ts","../src/constants/keychain.ts","../src/constants/messages.ts","../src/constants/publisher.ts","../src/constants/relayer.ts","../src/constants/store.ts","../src/constants/subscriber.ts","../src/constants/pairing.ts","../src/constants/history.ts","../src/constants/expirer.ts","../src/controllers/keychain.ts","../src/controllers/crypto.ts","../src/controllers/messages.ts","../src/controllers/publisher.ts","../src/controllers/topicmap.ts","../src/controllers/subscriber.ts","../src/controllers/relayer.ts","../src/controllers/store.ts","../src/controllers/pairing.ts","../src/controllers/history.ts","../src/controllers/expirer.ts","../src/core.ts","../src/index.ts"],"sourcesContent":["function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","export function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return globalThis.Buffer.alloc(size);\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return globalThis.Buffer.allocUnsafe(size);\n  }\n  return new Uint8Array(size);\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(string, 'utf8');\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","export const CORE_PROTOCOL = \"wc\";\nexport const CORE_VERSION = 2;\nexport const CORE_CONTEXT = \"core\";\n\nexport const CORE_STORAGE_PREFIX = `${CORE_PROTOCOL}@${CORE_VERSION}:${CORE_CONTEXT}:`;\n\nexport const CORE_DEFAULT = {\n  name: CORE_CONTEXT,\n  logger: \"error\",\n};\n\nexport const CORE_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n","import { ONE_DAY } from \"@walletconnect/time\";\n\nexport const CRYPTO_CONTEXT = \"crypto\";\n\nexport const CRYPTO_CLIENT_SEED = \"client_ed25519_seed\";\n\nexport const CRYPTO_JWT_TTL = ONE_DAY;\n","export const KEYCHAIN_CONTEXT = \"keychain\";\n\nexport const KEYCHAIN_STORAGE_VERSION = \"0.3\";\n","export const MESSAGES_CONTEXT = \"messages\";\n\nexport const MESSAGES_STORAGE_VERSION = \"0.3\";\n","import { SIX_HOURS } from \"@walletconnect/time\";\n\nexport const PUBLISHER_DEFAULT_TTL = SIX_HOURS;\n\nexport const PUBLISHER_CONTEXT = \"publisher\";\n","import { ONE_SECOND } from \"@walletconnect/time\";\n\nexport const RELAYER_DEFAULT_PROTOCOL = \"irn\";\n\nexport const RELAYER_DEFAULT_LOGGER = \"error\";\n\nexport const RELAYER_DEFAULT_RELAY_URL = \"wss://relay.walletconnect.com\";\n\nexport const RELAYER_CONTEXT = \"relayer\";\n\nexport const RELAYER_EVENTS = {\n  message: \"relayer_message\",\n  connect: \"relayer_connect\",\n  disconnect: \"relayer_disconnect\",\n  error: \"relayer_error\",\n  connection_stalled: \"relayer_connection_stalled\",\n  transport_closed: \"relayer_transport_closed\",\n  publish: \"relayer_publish\",\n};\n\nexport const RELAYER_SUBSCRIBER_SUFFIX = \"_subscription\";\n\nexport const RELAYER_PROVIDER_EVENTS = {\n  payload: \"payload\",\n  connect: \"connect\",\n  disconnect: \"disconnect\",\n  error: \"error\",\n};\n\nexport const RELAYER_RECONNECT_TIMEOUT = ONE_SECOND;\n\nexport const RELAYER_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n\n// Updated automatically via `new-version` npm script.\nexport const RELAYER_SDK_VERSION = \"2.2.1\";\n","export const STORE_STORAGE_VERSION = \"0.3\";\n","import { THIRTY_DAYS, FIVE_SECONDS } from \"@walletconnect/time\";\n\nexport const SUBSCRIBER_EVENTS = {\n  created: \"subscription_created\",\n  deleted: \"subscription_deleted\",\n  expired: \"subscription_expired\",\n  disabled: \"subscription_disabled\",\n  sync: \"subscription_sync\",\n  resubscribed: \"subscription_resubscribed\",\n};\n\nexport const SUBSCRIBER_DEFAULT_TTL = THIRTY_DAYS;\n\nexport const SUBSCRIBER_CONTEXT = \"subscription\";\n\nexport const SUBSCRIBER_STORAGE_VERSION = \"0.3\";\n\nexport const PENDING_SUB_RESOLUTION_TIMEOUT = FIVE_SECONDS * 1000;\n","import { THIRTY_DAYS, ONE_DAY, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { RelayerTypes, PairingJsonRpcTypes } from \"@walletconnect/types\";\n\nexport const PAIRING_CONTEXT = \"pairing\";\n\nexport const PAIRING_STORAGE_VERSION = \"0.3\";\n\nexport const PAIRING_DEFAULT_TTL = THIRTY_DAYS;\n\nexport const PAIRING_RPC_OPTS: Record<\n  PairingJsonRpcTypes.WcMethod | \"unregistered_method\",\n  {\n    req: RelayerTypes.PublishOptions;\n    res: RelayerTypes.PublishOptions;\n  }\n> = {\n  wc_pairingDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1000,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1001,\n    },\n  },\n  wc_pairingPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1002,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1003,\n    },\n  },\n  unregistered_method: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 0,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 0,\n    },\n  },\n};\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { ONE_DAY } from \"@walletconnect/time\";\n\nexport const EXPIRER_CONTEXT = \"expirer\";\n\nexport const EXPIRER_EVENTS = {\n  created: \"expirer_created\",\n  deleted: \"expirer_deleted\",\n  expired: \"expirer_expired\",\n  sync: \"expirer_sync\",\n};\n\nexport const EXPIRER_STORAGE_VERSION = \"0.3\";\n\nexport const EXPIRER_DEFAULT_TTL = ONE_DAY;\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IKeyChain } from \"@walletconnect/types\";\nimport { getInternalError, mapToObj, objToMap } from \"@walletconnect/utils\";\n\nimport { CORE_STORAGE_PREFIX, KEYCHAIN_CONTEXT, KEYCHAIN_STORAGE_VERSION } from \"../constants\";\n\nexport class KeyChain implements IKeyChain {\n  public keychain = new Map<string, string>();\n  public name = KEYCHAIN_CONTEXT;\n  public version = KEYCHAIN_STORAGE_VERSION;\n\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    this.core = core;\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IKeyChain[\"init\"] = async () => {\n    if (!this.initialized) {\n      const keychain = await this.getKeyChain();\n      if (typeof keychain !== \"undefined\") {\n        this.keychain = keychain;\n      }\n      this.initialized = true;\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey() {\n    return this.storagePrefix + this.version + \"//\" + this.name;\n  }\n\n  public has: IKeyChain[\"has\"] = (tag) => {\n    this.isInitialized();\n    return this.keychain.has(tag);\n  };\n\n  public set: IKeyChain[\"set\"] = async (tag, key) => {\n    this.isInitialized();\n    this.keychain.set(tag, key);\n    await this.persist();\n  };\n\n  public get: IKeyChain[\"get\"] = (tag) => {\n    this.isInitialized();\n    const key = this.keychain.get(tag);\n    if (typeof key === \"undefined\") {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${tag}`);\n      throw new Error(message);\n    }\n    return key;\n  };\n\n  public del: IKeyChain[\"del\"] = async (tag) => {\n    this.isInitialized();\n    this.keychain.delete(tag);\n    await this.persist();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setKeyChain(keychain: Map<string, string>) {\n    await this.core.storage.setItem<Record<string, string>>(this.storageKey, mapToObj(keychain));\n  }\n\n  private async getKeyChain() {\n    const keychain = await this.core.storage.getItem<Record<string, string>>(this.storageKey);\n    return typeof keychain !== \"undefined\" ? objToMap(keychain) : undefined;\n  }\n\n  private async persist() {\n    await this.setKeyChain(this.keychain);\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { safeJsonParse, safeJsonStringify } from \"@walletconnect/safe-json\";\nimport { ICore, ICrypto, IKeyChain } from \"@walletconnect/types\";\nimport * as relayAuth from \"@walletconnect/relay-auth\";\nimport { fromString } from \"uint8arrays/from-string\";\nimport {\n  decrypt,\n  deriveSymKey,\n  encrypt,\n  generateKeyPair as generateKeyPairUtil,\n  hashKey,\n  getInternalError,\n  generateRandomBytes32,\n  validateEncoding,\n  validateDecoding,\n  isTypeOneEnvelope,\n  deserialize,\n  decodeTypeByte,\n} from \"@walletconnect/utils\";\nimport { CRYPTO_CONTEXT, CRYPTO_CLIENT_SEED, CRYPTO_JWT_TTL } from \"../constants\";\nimport { KeyChain } from \"./keychain\";\n\nexport class Crypto implements ICrypto {\n  public name = CRYPTO_CONTEXT;\n  public keychain: ICrypto[\"keychain\"];\n\n  private initialized = false;\n\n  constructor(public core: ICore, public logger: Logger, keychain?: IKeyChain) {\n    this.core = core;\n    this.logger = generateChildLogger(logger, this.name);\n    this.keychain = keychain || new KeyChain(this.core, this.logger);\n  }\n\n  public init: ICrypto[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.keychain.init();\n      this.initialized = true;\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  public hasKeys: ICrypto[\"hasKeys\"] = (tag) => {\n    this.isInitialized();\n    return this.keychain.has(tag);\n  };\n\n  public getClientId: ICrypto[\"getClientId\"] = async () => {\n    this.isInitialized();\n    const seed = await this.getClientSeed();\n    const keyPair = relayAuth.generateKeyPair(seed);\n    const clientId = relayAuth.encodeIss(keyPair.publicKey);\n    return clientId;\n  };\n\n  public generateKeyPair: ICrypto[\"generateKeyPair\"] = () => {\n    this.isInitialized();\n    const keyPair = generateKeyPairUtil();\n    return this.setPrivateKey(keyPair.publicKey, keyPair.privateKey);\n  };\n\n  public signJWT: ICrypto[\"signJWT\"] = async (aud) => {\n    this.isInitialized();\n    const seed = await this.getClientSeed();\n    const keyPair = relayAuth.generateKeyPair(seed);\n    const sub = generateRandomBytes32();\n    const ttl = CRYPTO_JWT_TTL;\n    const jwt = await relayAuth.signJWT(sub, aud, ttl, keyPair);\n    return jwt;\n  };\n\n  public generateSharedKey: ICrypto[\"generateSharedKey\"] = (\n    selfPublicKey,\n    peerPublicKey,\n    overrideTopic,\n  ) => {\n    this.isInitialized();\n    const selfPrivateKey = this.getPrivateKey(selfPublicKey);\n    const symKey = deriveSymKey(selfPrivateKey, peerPublicKey);\n    return this.setSymKey(symKey, overrideTopic);\n  };\n\n  public setSymKey: ICrypto[\"setSymKey\"] = async (symKey, overrideTopic) => {\n    this.isInitialized();\n    const topic = overrideTopic || hashKey(symKey);\n    await this.keychain.set(topic, symKey);\n    return topic;\n  };\n\n  public deleteKeyPair: ICrypto[\"deleteKeyPair\"] = async (publicKey: string) => {\n    this.isInitialized();\n    await this.keychain.del(publicKey);\n  };\n\n  public deleteSymKey: ICrypto[\"deleteSymKey\"] = async (topic: string) => {\n    this.isInitialized();\n    await this.keychain.del(topic);\n  };\n\n  public encode: ICrypto[\"encode\"] = async (topic, payload, opts) => {\n    this.isInitialized();\n    const params = validateEncoding(opts);\n    const message = safeJsonStringify(payload);\n    if (isTypeOneEnvelope(params)) {\n      const selfPublicKey = params.senderPublicKey;\n      const peerPublicKey = params.receiverPublicKey;\n      topic = await this.generateSharedKey(selfPublicKey, peerPublicKey);\n    }\n    const symKey = this.getSymKey(topic);\n    const { type, senderPublicKey } = params;\n    const result = encrypt({ type, symKey, message, senderPublicKey });\n    return result;\n  };\n\n  public decode: ICrypto[\"decode\"] = async (topic, encoded, opts) => {\n    this.isInitialized();\n    const params = validateDecoding(encoded, opts);\n    if (isTypeOneEnvelope(params)) {\n      const selfPublicKey = params.receiverPublicKey;\n      const peerPublicKey = params.senderPublicKey;\n      topic = await this.generateSharedKey(selfPublicKey, peerPublicKey);\n    }\n    const symKey = this.getSymKey(topic);\n    const message = decrypt({ symKey, encoded });\n    const payload = safeJsonParse(message);\n    return payload;\n  };\n\n  public getPayloadType(encoded: string): number {\n    const deserialized = deserialize(encoded);\n    return decodeTypeByte(deserialized.type);\n  }\n  // ---------- Private ----------------------------------------------- //\n\n  private async setPrivateKey(publicKey: string, privateKey: string): Promise<string> {\n    await this.keychain.set(publicKey, privateKey);\n    return publicKey;\n  }\n\n  private getPrivateKey(publicKey: string) {\n    const privateKey = this.keychain.get(publicKey);\n    return privateKey;\n  }\n\n  private async getClientSeed(): Promise<Uint8Array> {\n    let seed = \"\";\n    try {\n      seed = this.keychain.get(CRYPTO_CLIENT_SEED);\n    } catch {\n      seed = generateRandomBytes32();\n      await this.keychain.set(CRYPTO_CLIENT_SEED, seed);\n    }\n    return fromString(seed, \"base16\");\n  }\n\n  private getSymKey(topic: string) {\n    const symKey = this.keychain.get(topic);\n    return symKey;\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IMessageTracker, MessageRecord } from \"@walletconnect/types\";\nimport { hashMessage, mapToObj, objToMap, getInternalError } from \"@walletconnect/utils\";\nimport { CORE_STORAGE_PREFIX, MESSAGES_CONTEXT, MESSAGES_STORAGE_VERSION } from \"../constants\";\n\nexport class MessageTracker extends IMessageTracker {\n  public messages = new Map<string, MessageRecord>();\n  public name = MESSAGES_CONTEXT;\n  public version = MESSAGES_STORAGE_VERSION;\n\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public logger: Logger, public core: ICore) {\n    super(logger, core);\n    this.logger = generateChildLogger(logger, this.name);\n    this.core = core;\n  }\n\n  public init: IMessageTracker[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      try {\n        const messages = await this.getRelayerMessages();\n        if (typeof messages !== \"undefined\") {\n          this.messages = messages;\n        }\n\n        this.logger.debug(`Successfully Restored records for ${this.name}`);\n        this.logger.trace({ type: \"method\", method: \"restore\", size: this.messages.size });\n      } catch (e) {\n        this.logger.debug(`Failed to Restore records for ${this.name}`);\n        this.logger.error(e as any);\n      } finally {\n        this.initialized = true;\n      }\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey(): string {\n    return this.storagePrefix + this.version + \"//\" + this.name;\n  }\n\n  public set: IMessageTracker[\"set\"] = async (topic, message) => {\n    this.isInitialized();\n    const hash = hashMessage(message);\n    let messages = this.messages.get(topic);\n    if (typeof messages === \"undefined\") {\n      messages = {};\n    }\n    if (typeof messages[hash] !== \"undefined\") {\n      return hash;\n    }\n    messages[hash] = message;\n    this.messages.set(topic, messages);\n    await this.persist();\n    return hash;\n  };\n\n  public get: IMessageTracker[\"get\"] = (topic) => {\n    this.isInitialized();\n    let messages = this.messages.get(topic);\n    if (typeof messages === \"undefined\") {\n      messages = {};\n    }\n    return messages;\n  };\n\n  public has: IMessageTracker[\"has\"] = (topic, message) => {\n    this.isInitialized();\n    const messages = this.get(topic);\n    const hash = hashMessage(message);\n    return typeof messages[hash] !== \"undefined\";\n  };\n\n  public del: IMessageTracker[\"del\"] = async (topic) => {\n    this.isInitialized();\n    this.messages.delete(topic);\n    await this.persist();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setRelayerMessages(messages: Map<string, MessageRecord>): Promise<void> {\n    await this.core.storage.setItem<Record<string, MessageRecord>>(\n      this.storageKey,\n      mapToObj(messages),\n    );\n  }\n\n  private async getRelayerMessages(): Promise<Map<string, MessageRecord> | undefined> {\n    const messages = await this.core.storage.getItem<Record<string, MessageRecord>>(\n      this.storageKey,\n    );\n    return typeof messages !== \"undefined\" ? objToMap(messages) : undefined;\n  }\n\n  private async persist() {\n    await this.setRelayerMessages(this.messages);\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { RequestArguments } from \"@walletconnect/jsonrpc-types\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\nimport { IPublisher, IRelayer, PublisherTypes, RelayerTypes } from \"@walletconnect/types\";\nimport {\n  getRelayProtocolApi,\n  getRelayProtocolName,\n  hashMessage,\n  isUndefined,\n  createExpiringPromise,\n} from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { PUBLISHER_CONTEXT, PUBLISHER_DEFAULT_TTL, RELAYER_EVENTS } from \"../constants\";\n\nexport class Publisher extends IPublisher {\n  public events = new EventEmitter();\n  public name = PUBLISHER_CONTEXT;\n  public queue = new Map<string, PublisherTypes.Params>();\n  private publishTimeout = 10_000;\n\n  constructor(public relayer: IRelayer, public logger: Logger) {\n    super(relayer, logger);\n    this.relayer = relayer;\n    this.logger = generateChildLogger(logger, this.name);\n    this.registerEventListeners();\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  public publish: IPublisher[\"publish\"] = async (topic, message, opts) => {\n    this.logger.debug(`Publishing Payload`);\n    this.logger.trace({ type: \"method\", method: \"publish\", params: { topic, message, opts } });\n    try {\n      const ttl = opts?.ttl || PUBLISHER_DEFAULT_TTL;\n      const relay = getRelayProtocolName(opts);\n      const prompt = opts?.prompt || false;\n      const tag = opts?.tag || 0;\n      const params = { topic, message, opts: { ttl, relay, prompt, tag } };\n      const hash = hashMessage(message);\n      this.queue.set(hash, params);\n      try {\n        const publish = await createExpiringPromise(\n          this.rpcPublish(topic, message, ttl, relay, prompt, tag),\n          this.publishTimeout,\n        );\n        await publish;\n        this.relayer.events.emit(RELAYER_EVENTS.publish, params);\n      } catch (err) {\n        this.logger.debug(`Publishing Payload stalled`);\n        this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n        return;\n      }\n      this.onPublish(hash, params);\n      this.logger.debug(`Successfully Published Payload`);\n      this.logger.trace({ type: \"method\", method: \"publish\", params: { topic, message, opts } });\n    } catch (e) {\n      this.logger.debug(`Failed to Publish Payload`);\n      this.logger.error(e as any);\n      throw e;\n    }\n  };\n\n  public on: IPublisher[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IPublisher[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IPublisher[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IPublisher[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private rpcPublish(\n    topic: string,\n    message: string,\n    ttl: number,\n    relay: RelayerTypes.ProtocolOptions,\n    prompt?: boolean,\n    tag?: number,\n  ) {\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.PublishParams> = {\n      method: api.publish,\n      params: {\n        topic,\n        message,\n        ttl,\n        prompt,\n        tag,\n      },\n    };\n    if (isUndefined(request.params?.prompt)) delete request.params?.prompt;\n    if (isUndefined(request.params?.tag)) delete request.params?.tag;\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"message\", direction: \"outgoing\", request });\n    return this.relayer.provider.request(request);\n  }\n\n  private onPublish(hash: string, _params: PublisherTypes.Params) {\n    this.queue.delete(hash);\n  }\n\n  private checkQueue() {\n    this.queue.forEach(async (params) => {\n      const { topic, message, opts } = params;\n      await this.publish(topic, message, opts);\n    });\n  }\n\n  private registerEventListeners() {\n    this.relayer.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => {\n      this.checkQueue();\n    });\n  }\n}\n","import { ISubscriberTopicMap } from \"@walletconnect/types\";\n\nexport class SubscriberTopicMap implements ISubscriberTopicMap {\n  public map = new Map<string, string[]>();\n\n  get topics(): string[] {\n    return Array.from(this.map.keys());\n  }\n\n  public set: ISubscriberTopicMap[\"set\"] = (topic, id) => {\n    const ids = this.get(topic);\n    if (this.exists(topic, id)) return;\n    this.map.set(topic, [...ids, id]);\n  };\n\n  public get: ISubscriberTopicMap[\"get\"] = (topic) => {\n    const ids = this.map.get(topic);\n    return ids || [];\n  };\n\n  public exists: ISubscriberTopicMap[\"exists\"] = (topic, id) => {\n    const ids = this.get(topic);\n    return ids.includes(id);\n  };\n\n  public delete: ISubscriberTopicMap[\"delete\"] = (topic, id) => {\n    if (typeof id === \"undefined\") {\n      this.map.delete(topic);\n      return;\n    }\n    if (!this.map.has(topic)) return;\n    const ids = this.get(topic);\n    if (!this.exists(topic, id)) return;\n    const remaining = ids.filter((x) => x !== id);\n    if (!remaining.length) {\n      this.map.delete(topic);\n      return;\n    }\n    this.map.set(topic, remaining);\n  };\n\n  public clear: ISubscriberTopicMap[\"clear\"] = () => {\n    this.map.clear();\n  };\n}\n","import { EventEmitter } from \"events\";\nimport { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { ErrorResponse, RequestArguments } from \"@walletconnect/jsonrpc-types\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\nimport { Watch } from \"@walletconnect/time\";\nimport {\n  IRelayer,\n  ISubscriber,\n  RelayerTypes,\n  SubscriberEvents,\n  SubscriberTypes,\n} from \"@walletconnect/types\";\nimport {\n  getSdkError,\n  getInternalError,\n  getRelayProtocolApi,\n  getRelayProtocolName,\n  createExpiringPromise,\n} from \"@walletconnect/utils\";\nimport {\n  CORE_STORAGE_PREFIX,\n  SUBSCRIBER_CONTEXT,\n  SUBSCRIBER_EVENTS,\n  SUBSCRIBER_STORAGE_VERSION,\n  PENDING_SUB_RESOLUTION_TIMEOUT,\n  RELAYER_EVENTS,\n} from \"../constants\";\nimport { SubscriberTopicMap } from \"./topicmap\";\n\nexport class Subscriber extends ISubscriber {\n  public subscriptions = new Map<string, SubscriberTypes.Active>();\n  public topicMap = new SubscriberTopicMap();\n  public events = new EventEmitter();\n  public name = SUBSCRIBER_CONTEXT;\n  public version = SUBSCRIBER_STORAGE_VERSION;\n  public pending = new Map<string, SubscriberTypes.Params>();\n\n  private cached: SubscriberTypes.Active[] = [];\n  private initialized = false;\n  private pendingSubscriptionWatchLabel = \"pending_sub_watch_label\";\n  private pendingSubInterval = 20;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n  private subscribeTimeout = 10_000;\n  constructor(public relayer: IRelayer, public logger: Logger) {\n    super(relayer, logger);\n    this.relayer = relayer;\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: ISubscriber[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restart();\n      this.registerEventListeners();\n      this.onEnable();\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey(): string {\n    return this.storagePrefix + this.version + \"//\" + this.name;\n  }\n\n  get length() {\n    return this.subscriptions.size;\n  }\n\n  get ids() {\n    return Array.from(this.subscriptions.keys());\n  }\n\n  get values() {\n    return Array.from(this.subscriptions.values());\n  }\n\n  get topics() {\n    return this.topicMap.topics;\n  }\n\n  public subscribe: ISubscriber[\"subscribe\"] = async (topic, opts) => {\n    this.isInitialized();\n    this.logger.debug(`Subscribing Topic`);\n    this.logger.trace({ type: \"method\", method: \"subscribe\", params: { topic, opts } });\n    try {\n      const relay = getRelayProtocolName(opts);\n      const params = { topic, relay };\n      this.pending.set(topic, params);\n      const id = await this.rpcSubscribe(topic, relay);\n      this.onSubscribe(id, params);\n      this.logger.debug(`Successfully Subscribed Topic`);\n      this.logger.trace({ type: \"method\", method: \"subscribe\", params: { topic, opts } });\n      return id;\n    } catch (e) {\n      this.logger.debug(`Failed to Subscribe Topic`);\n      this.logger.error(e as any);\n      throw e;\n    }\n  };\n\n  public unsubscribe: ISubscriber[\"unsubscribe\"] = async (topic, opts) => {\n    this.isInitialized();\n    if (typeof opts?.id !== \"undefined\") {\n      await this.unsubscribeById(topic, opts.id, opts);\n    } else {\n      await this.unsubscribeByTopic(topic, opts);\n    }\n  };\n\n  public isSubscribed: ISubscriber[\"isSubscribed\"] = async (topic: string) => {\n    // topic subscription is already resolved\n    if (this.topics.includes(topic)) return true;\n\n    // wait for the subscription to resolve\n    return await new Promise((resolve, reject) => {\n      const watch = new Watch();\n      watch.start(this.pendingSubscriptionWatchLabel);\n\n      const interval = setInterval(() => {\n        if (!this.pending.has(topic) && this.topics.includes(topic)) {\n          clearInterval(interval);\n          watch.stop(this.pendingSubscriptionWatchLabel);\n          resolve(true);\n        }\n        if (watch.elapsed(this.pendingSubscriptionWatchLabel) >= PENDING_SUB_RESOLUTION_TIMEOUT) {\n          clearInterval(interval);\n          watch.stop(this.pendingSubscriptionWatchLabel);\n          reject(false);\n        }\n      }, this.pendingSubInterval);\n    });\n  };\n\n  public on: ISubscriber[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: ISubscriber[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: ISubscriber[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: ISubscriber[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private hasSubscription(id: string, topic: string) {\n    let result = false;\n    try {\n      const subscription = this.getSubscription(id);\n      result = subscription.topic === topic;\n    } catch (e) {\n      // ignore error\n    }\n    return result;\n  }\n\n  private onEnable() {\n    this.cached = [];\n    this.initialized = true;\n  }\n\n  private onDisable() {\n    this.cached = this.values;\n    this.subscriptions.clear();\n    this.topicMap.clear();\n    this.initialized = false;\n  }\n\n  private async unsubscribeByTopic(topic: string, opts?: RelayerTypes.UnsubscribeOptions) {\n    const ids = this.topicMap.get(topic);\n    await Promise.all(ids.map(async (id) => await this.unsubscribeById(topic, id, opts)));\n  }\n\n  private async unsubscribeById(topic: string, id: string, opts?: RelayerTypes.UnsubscribeOptions) {\n    this.logger.debug(`Unsubscribing Topic`);\n    this.logger.trace({ type: \"method\", method: \"unsubscribe\", params: { topic, id, opts } });\n    try {\n      const relay = getRelayProtocolName(opts);\n      await this.rpcUnsubscribe(topic, id, relay);\n      const reason = getSdkError(\"USER_DISCONNECTED\", `${this.name}, ${topic}`);\n      await this.onUnsubscribe(topic, id, reason);\n      this.logger.debug(`Successfully Unsubscribed Topic`);\n      this.logger.trace({ type: \"method\", method: \"unsubscribe\", params: { topic, id, opts } });\n    } catch (e) {\n      this.logger.debug(`Failed to Unsubscribe Topic`);\n      this.logger.error(e as any);\n      throw e;\n    }\n  }\n\n  private async rpcSubscribe(topic: string, relay: RelayerTypes.ProtocolOptions) {\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.SubscribeParams> = {\n      method: api.subscribe,\n      params: {\n        topic,\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    let result: any;\n    try {\n      const subscribe = await createExpiringPromise(\n        this.relayer.provider.request(request),\n        this.subscribeTimeout,\n      );\n      result = await subscribe;\n    } catch (err) {\n      this.logger.debug(`Outgoing Relay Payload stalled`);\n      this.relayer.events.emit(RELAYER_EVENTS.connection_stalled);\n    }\n    return result;\n  }\n\n  private rpcUnsubscribe(topic: string, id: string, relay: RelayerTypes.ProtocolOptions) {\n    const api = getRelayProtocolApi(relay.protocol);\n    const request: RequestArguments<RelayJsonRpc.UnsubscribeParams> = {\n      method: api.unsubscribe,\n      params: {\n        topic,\n        id,\n      },\n    };\n    this.logger.debug(`Outgoing Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"outgoing\", request });\n    return this.relayer.provider.request(request);\n  }\n\n  private onSubscribe(id: string, params: SubscriberTypes.Params) {\n    this.setSubscription(id, { ...params, id });\n    this.pending.delete(params.topic);\n  }\n\n  private onResubscribe(id: string, params: SubscriberTypes.Params) {\n    this.addSubscription(id, { ...params, id });\n    this.pending.delete(params.topic);\n  }\n\n  private async onUnsubscribe(topic: string, id: string, reason: ErrorResponse) {\n    this.events.removeAllListeners(id);\n    if (this.hasSubscription(id, topic)) {\n      this.deleteSubscription(id, reason);\n    }\n    await this.relayer.messages.del(topic);\n  }\n\n  private async setRelayerSubscriptions(subscriptions: SubscriberTypes.Active[]) {\n    await this.relayer.core.storage.setItem<SubscriberTypes.Active[]>(\n      this.storageKey,\n      subscriptions,\n    );\n  }\n\n  private async getRelayerSubscriptions() {\n    const subscriptions = await this.relayer.core.storage.getItem<SubscriberTypes.Active[]>(\n      this.storageKey,\n    );\n    return subscriptions;\n  }\n\n  private setSubscription(id: string, subscription: SubscriberTypes.Active) {\n    if (this.subscriptions.has(id)) return;\n    this.logger.debug(`Setting subscription`);\n    this.logger.trace({ type: \"method\", method: \"setSubscription\", id, subscription });\n    this.addSubscription(id, subscription);\n  }\n\n  private addSubscription(id: string, subscription: SubscriberTypes.Active) {\n    this.subscriptions.set(id, { ...subscription });\n    this.topicMap.set(subscription.topic, id);\n    this.events.emit(SUBSCRIBER_EVENTS.created, subscription);\n  }\n\n  private getSubscription(id: string) {\n    this.logger.debug(`Getting subscription`);\n    this.logger.trace({ type: \"method\", method: \"getSubscription\", id });\n    const subscription = this.subscriptions.get(id);\n    if (!subscription) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${id}`);\n      throw new Error(message);\n    }\n    return subscription;\n  }\n\n  private deleteSubscription(id: string, reason: ErrorResponse) {\n    this.logger.debug(`Deleting subscription`);\n    this.logger.trace({ type: \"method\", method: \"deleteSubscription\", id, reason });\n    const subscription = this.getSubscription(id);\n    this.subscriptions.delete(id);\n    this.topicMap.delete(subscription.topic, id);\n    this.events.emit(SUBSCRIBER_EVENTS.deleted, {\n      ...subscription,\n      reason,\n    } as SubscriberEvents.Deleted);\n  }\n\n  private restart = async () => {\n    await this.restore();\n    await this.reset();\n  };\n\n  private async persist() {\n    await this.setRelayerSubscriptions(this.values);\n    this.events.emit(SUBSCRIBER_EVENTS.sync);\n  }\n\n  private async reset() {\n    if (this.cached.length) {\n      await Promise.all(\n        this.cached.map(async (subscription) => await this.resubscribe(subscription)),\n      );\n    }\n    this.events.emit(SUBSCRIBER_EVENTS.resubscribed);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getRelayerSubscriptions();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.subscriptions.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored subscriptions for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", subscriptions: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private async resubscribe(subscription: SubscriberTypes.Active) {\n    if (!this.ids.includes(subscription.id)) {\n      const { topic, relay } = subscription;\n      const params = { topic, relay };\n      this.pending.set(params.topic, params);\n      const id = await this.rpcSubscribe(params.topic, params.relay);\n      this.onResubscribe(id, params);\n    }\n  }\n\n  private async onConnect() {\n    await this.restart();\n    this.onEnable();\n  }\n\n  private onDisconnect() {\n    this.onDisable();\n  }\n\n  private checkPending() {\n    if (this.relayer.transportExplicitlyClosed) {\n      return;\n    }\n    this.pending.forEach(async (params) => {\n      const id = await this.rpcSubscribe(params.topic, params.relay);\n      this.onSubscribe(id, params);\n    });\n  }\n\n  private registerEventListeners() {\n    this.relayer.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => {\n      this.checkPending();\n    });\n    this.relayer.on(RELAYER_EVENTS.connect, async () => {\n      await this.onConnect();\n    });\n    this.relayer.on(RELAYER_EVENTS.disconnect, () => {\n      this.onDisconnect();\n    });\n    this.events.on(SUBSCRIBER_EVENTS.created, async (createdEvent: SubscriberEvents.Created) => {\n      const eventName = SUBSCRIBER_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: createdEvent });\n      await this.persist();\n    });\n    this.events.on(SUBSCRIBER_EVENTS.deleted, async (deletedEvent: SubscriberEvents.Deleted) => {\n      const eventName = SUBSCRIBER_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: deletedEvent });\n      await this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { EventEmitter } from \"events\";\nimport pino from \"pino\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport {\n  formatJsonRpcResult,\n  IJsonRpcProvider,\n  isJsonRpcRequest,\n  JsonRpcPayload,\n  JsonRpcRequest,\n} from \"@walletconnect/jsonrpc-utils\";\nimport WsConnection from \"@walletconnect/jsonrpc-ws-connection\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  Logger,\n} from \"@walletconnect/logger\";\nimport { RelayJsonRpc } from \"@walletconnect/relay-api\";\nimport { toMiliseconds } from \"@walletconnect/time\";\nimport {\n  ICore,\n  IMessageTracker,\n  IPublisher,\n  IRelayer,\n  ISubscriber,\n  RelayerOptions,\n  RelayerTypes,\n  SubscriberTypes,\n} from \"@walletconnect/types\";\nimport { formatRelayRpcUrl, getInternalError } from \"@walletconnect/utils\";\n\nimport {\n  RELAYER_SDK_VERSION,\n  RELAYER_CONTEXT,\n  RELAYER_DEFAULT_LOGGER,\n  RELAYER_EVENTS,\n  RELAYER_PROVIDER_EVENTS,\n  RELAYER_RECONNECT_TIMEOUT,\n  RELAYER_SUBSCRIBER_SUFFIX,\n  RELAYER_DEFAULT_RELAY_URL,\n  SUBSCRIBER_EVENTS,\n} from \"../constants\";\nimport { MessageTracker } from \"./messages\";\nimport { Publisher } from \"./publisher\";\nimport { Subscriber } from \"./subscriber\";\n\nexport class Relayer extends IRelayer {\n  public protocol = \"wc\";\n  public version = 2;\n\n  public core: ICore;\n  public logger: Logger;\n  public events = new EventEmitter();\n  public provider: IJsonRpcProvider;\n  public messages: IMessageTracker;\n  public subscriber: ISubscriber;\n  public publisher: IPublisher;\n  public name = RELAYER_CONTEXT;\n  public transportExplicitlyClosed = false;\n\n  private initialized = false;\n\n  private relayUrl: string;\n  private projectId: string | undefined;\n  constructor(opts: RelayerOptions) {\n    super(opts);\n    this.core = opts.core;\n    this.logger =\n      typeof opts.logger !== \"undefined\" && typeof opts.logger !== \"string\"\n        ? generateChildLogger(opts.logger, this.name)\n        : pino(getDefaultLoggerOptions({ level: opts.logger || RELAYER_DEFAULT_LOGGER }));\n    this.messages = new MessageTracker(this.logger, opts.core);\n    this.subscriber = new Subscriber(this, this.logger);\n    this.publisher = new Publisher(this, this.logger);\n\n    this.relayUrl = opts?.relayUrl || RELAYER_DEFAULT_RELAY_URL;\n    this.projectId = opts.projectId;\n\n    // re-assigned during init()\n    this.provider = {} as IJsonRpcProvider;\n  }\n\n  public async init() {\n    this.logger.trace(`Initialized`);\n    this.provider = await this.createProvider();\n    await Promise.all([this.messages.init(), this.transportOpen(), this.subscriber.init()]);\n    this.registerEventListeners();\n    this.initialized = true;\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get connected() {\n    return this.provider.connection.connected;\n  }\n\n  get connecting() {\n    return this.provider.connection.connecting;\n  }\n\n  public async publish(topic: string, message: string, opts?: RelayerTypes.PublishOptions) {\n    this.isInitialized();\n    await this.publisher.publish(topic, message, opts);\n    await this.recordMessageEvent({ topic, message });\n  }\n\n  public async subscribe(topic: string, opts?: RelayerTypes.SubscribeOptions) {\n    this.isInitialized();\n    let id = \"\";\n    await Promise.all([\n      new Promise<void>((resolve) => {\n        this.subscriber.once(SUBSCRIBER_EVENTS.created, (subscription: SubscriberTypes.Active) => {\n          if (subscription.topic === topic) {\n            resolve();\n          }\n        });\n      }),\n      new Promise<void>(async (resolve) => {\n        id = await this.subscriber.subscribe(topic, opts);\n        resolve();\n      }),\n    ]);\n    return id;\n  }\n\n  public async unsubscribe(topic: string, opts?: RelayerTypes.UnsubscribeOptions) {\n    this.isInitialized();\n    await this.subscriber.unsubscribe(topic, opts);\n  }\n\n  public on(event: string, listener: any) {\n    this.events.on(event, listener);\n  }\n\n  public once(event: string, listener: any) {\n    this.events.once(event, listener);\n  }\n\n  public off(event: string, listener: any) {\n    this.events.off(event, listener);\n  }\n\n  public removeListener(event: string, listener: any) {\n    this.events.removeListener(event, listener);\n  }\n\n  public async transportClose() {\n    this.transportExplicitlyClosed = true;\n    if (this.connected) await this.provider.disconnect();\n    this.events.emit(RELAYER_EVENTS.transport_closed);\n  }\n\n  public async transportOpen(relayUrl?: string) {\n    this.relayUrl = relayUrl || this.relayUrl;\n    this.transportExplicitlyClosed = false;\n    try {\n      await Promise.all([\n        new Promise<void>((resolve) => {\n          if (!this.initialized) resolve();\n\n          // wait for the subscriber to finish resubscribing to its topics\n          this.subscriber.once(SUBSCRIBER_EVENTS.resubscribed, () => {\n            resolve();\n          });\n        }),\n        await Promise.race([\n          this.provider.connect(),\n          new Promise<void>((_res, reject) =>\n            // rejects pending promise if transport is closed before connection is established\n            // useful when .connect() gets stuck resolving\n            this.once(RELAYER_EVENTS.transport_closed, () => {\n              reject();\n            }),\n          ),\n        ]),\n      ]);\n    } catch (e: unknown | Error) {\n      const error = e as Error;\n      if (!/socket hang up/i.test(error.message)) {\n        throw new Error(error.message);\n      }\n      this.logger.error(error);\n      this.events.emit(RELAYER_EVENTS.transport_closed);\n    }\n  }\n\n  public async restartTransport(relayUrl?: string) {\n    await this.transportClose();\n    await new Promise<void>((resolve) => setTimeout(resolve, RELAYER_RECONNECT_TIMEOUT));\n    await this.transportOpen(relayUrl);\n  }\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async createProvider() {\n    const auth = await this.core.crypto.signJWT(this.relayUrl);\n    return new JsonRpcProvider(\n      new WsConnection(\n        formatRelayRpcUrl({\n          sdkVersion: RELAYER_SDK_VERSION,\n          protocol: this.protocol,\n          version: this.version,\n          relayUrl: this.relayUrl,\n          projectId: this.projectId,\n          auth,\n        }),\n      ),\n    );\n  }\n\n  private async recordMessageEvent(messageEvent: RelayerTypes.MessageEvent) {\n    const { topic, message } = messageEvent;\n    await this.messages.set(topic, message);\n  }\n\n  private async shouldIgnoreMessageEvent(messageEvent: RelayerTypes.MessageEvent) {\n    const { topic, message } = messageEvent;\n    if (!(await this.subscriber.isSubscribed(topic))) return true;\n    const exists = this.messages.has(topic, message);\n    return exists;\n  }\n\n  private async onProviderPayload(payload: JsonRpcPayload) {\n    this.logger.debug(`Incoming Relay Payload`);\n    this.logger.trace({ type: \"payload\", direction: \"incoming\", payload });\n    if (isJsonRpcRequest(payload)) {\n      if (!payload.method.endsWith(RELAYER_SUBSCRIBER_SUFFIX)) return;\n      const event = (payload as JsonRpcRequest<RelayJsonRpc.SubscriptionParams>).params;\n      const { topic, message } = event.data;\n      const messageEvent = { topic, message } as RelayerTypes.MessageEvent;\n      this.logger.debug(`Emitting Relayer Payload`);\n      this.logger.trace({ type: \"event\", event: event.id, ...messageEvent });\n      this.events.emit(event.id, messageEvent);\n      await this.acknowledgePayload(payload);\n      await this.onMessageEvent(messageEvent);\n    }\n  }\n\n  private async onMessageEvent(messageEvent: RelayerTypes.MessageEvent) {\n    if (await this.shouldIgnoreMessageEvent(messageEvent)) return;\n    this.events.emit(RELAYER_EVENTS.message, messageEvent);\n    await this.recordMessageEvent(messageEvent);\n  }\n\n  private async acknowledgePayload(payload: JsonRpcPayload) {\n    const response = formatJsonRpcResult(payload.id, true);\n    await this.provider.connection.send(response);\n  }\n\n  private registerEventListeners() {\n    this.provider.on(RELAYER_PROVIDER_EVENTS.payload, (payload: JsonRpcPayload) =>\n      this.onProviderPayload(payload),\n    );\n    this.provider.on(RELAYER_PROVIDER_EVENTS.connect, () => {\n      this.events.emit(RELAYER_EVENTS.connect);\n    });\n    this.provider.on(RELAYER_PROVIDER_EVENTS.disconnect, () => {\n      this.events.emit(RELAYER_EVENTS.disconnect);\n\n      this.attemptToReconnect();\n    });\n    this.provider.on(RELAYER_PROVIDER_EVENTS.error, (err: unknown) =>\n      this.events.emit(RELAYER_EVENTS.error, err),\n    );\n\n    this.events.on(RELAYER_EVENTS.connection_stalled, async () => {\n      await this.restartTransport();\n    });\n  }\n\n  private attemptToReconnect() {\n    if (this.transportExplicitlyClosed) {\n      return;\n    }\n\n    // Attempt reconnection after one second.\n    setTimeout(async () => {\n      await this.transportOpen();\n    }, toMiliseconds(RELAYER_RECONNECT_TIMEOUT));\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { ICore, IStore } from \"@walletconnect/types\";\nimport {\n  getInternalError,\n  isProposalStruct,\n  isSessionStruct,\n  isUndefined,\n} from \"@walletconnect/utils\";\nimport { CORE_STORAGE_PREFIX, STORE_STORAGE_VERSION } from \"../constants\";\nimport isEqual from \"lodash.isequal\";\n\nexport class Store<Key, Data extends Record<string, any>> extends IStore<Key, Data> {\n  public map = new Map<Key, Data>();\n  public version = STORE_STORAGE_VERSION;\n\n  private cached: Data[] = [];\n  private initialized = false;\n\n  /**\n   * Regenerates the value key to retrieve it from cache\n   */\n  private getKey: ((data: Data) => Key) | undefined;\n\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  /**\n   * @param {ICore} core Core\n   * @param {Logger} logger Logger\n   * @param {string} name Store's name\n   * @param {Store<Key, Data>[\"getKey\"]} getKey Regenerates the value key to retrieve it from cache\n   * @param {string} storagePrefix Prefixes value keys\n   */\n  constructor(\n    public core: ICore,\n    public logger: Logger,\n    public name: string,\n    storagePrefix: string = CORE_STORAGE_PREFIX,\n    getKey: Store<Key, Data>[\"getKey\"] = undefined,\n  ) {\n    super(core, logger, name, storagePrefix);\n    this.logger = generateChildLogger(logger, this.name);\n    this.storagePrefix = storagePrefix;\n    this.getKey = getKey;\n  }\n\n  public init: IStore<Key, Data>[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n\n      await this.restore();\n\n      this.cached.forEach((value) => {\n        if (isProposalStruct(value)) {\n          // TODO(pedro) revert type casting as any\n          this.map.set(value.id as any, value);\n        } else if (isSessionStruct(value)) {\n          // TODO(pedro) revert type casting as any\n          this.map.set(value.topic as any, value);\n        } else if (this.getKey && value !== null && !isUndefined(value)) {\n          this.map.set(this.getKey(value), value);\n        }\n      });\n\n      this.cached = [];\n      this.initialized = true;\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey(): string {\n    return this.storagePrefix + this.version + \"//\" + this.name;\n  }\n\n  get length() {\n    return this.map.size;\n  }\n\n  get keys() {\n    return Array.from(this.map.keys());\n  }\n\n  get values() {\n    return Array.from(this.map.values());\n  }\n\n  public set: IStore<Key, Data>[\"set\"] = async (key, value) => {\n    this.isInitialized();\n    if (this.map.has(key)) {\n      await this.update(key, value);\n    } else {\n      this.logger.debug(`Setting value`);\n      this.logger.trace({ type: \"method\", method: \"set\", key, value });\n      this.map.set(key, value);\n      await this.persist();\n    }\n  };\n\n  public get: IStore<Key, Data>[\"get\"] = (key) => {\n    this.isInitialized();\n    this.logger.debug(`Getting value`);\n    this.logger.trace({ type: \"method\", method: \"get\", key });\n    const value = this.getData(key);\n    return value;\n  };\n\n  public getAll: IStore<Key, Data>[\"getAll\"] = (filter) => {\n    this.isInitialized();\n    if (!filter) return this.values;\n\n    return this.values.filter((value) =>\n      Object.keys(filter).every((key) => isEqual(value[key], filter[key])),\n    );\n  };\n\n  public update: IStore<Key, Data>[\"update\"] = async (key, update) => {\n    this.isInitialized();\n    this.logger.debug(`Updating value`);\n    this.logger.trace({ type: \"method\", method: \"update\", key, update });\n    const value = { ...this.getData(key), ...update };\n    this.map.set(key, value);\n    await this.persist();\n  };\n\n  public delete: IStore<Key, Data>[\"delete\"] = async (key, reason) => {\n    this.isInitialized();\n    if (!this.map.has(key)) return;\n    this.logger.debug(`Deleting value`);\n    this.logger.trace({ type: \"method\", method: \"delete\", key, reason });\n    this.map.delete(key);\n    await this.persist();\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setDataStore(value: Data[]) {\n    await this.core.storage.setItem<Data[]>(this.storageKey, value);\n  }\n\n  private async getDataStore() {\n    const value = await this.core.storage.getItem<Data[]>(this.storageKey);\n    return value;\n  }\n\n  private getData(key: Key) {\n    const value = this.map.get(key);\n    if (!value) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${key}`);\n      this.logger.error(message);\n      throw new Error(message);\n    }\n    return value;\n  }\n\n  private async persist() {\n    await this.setDataStore(this.values);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getDataStore();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.map.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored value for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", value: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore value for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport {\n  ICore,\n  PairingTypes,\n  IPairing,\n  IPairingPrivate,\n  IStore,\n  RelayerTypes,\n  PairingJsonRpcTypes,\n  ExpirerTypes,\n} from \"@walletconnect/types\";\nimport {\n  getInternalError,\n  parseUri,\n  calcExpiry,\n  generateRandomBytes32,\n  formatUri,\n  getSdkError,\n  engineEvent,\n  createDelayedPromise,\n  isValidParams,\n  isValidUrl,\n  isValidString,\n  isExpired,\n  parseExpirerTarget,\n  TYPE_1,\n} from \"@walletconnect/utils\";\nimport {\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  formatJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  isJsonRpcError,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES, THIRTY_DAYS } from \"@walletconnect/time\";\nimport EventEmitter from \"events\";\nimport {\n  PAIRING_CONTEXT,\n  PAIRING_STORAGE_VERSION,\n  CORE_STORAGE_PREFIX,\n  RELAYER_DEFAULT_PROTOCOL,\n  PAIRING_RPC_OPTS,\n  RELAYER_EVENTS,\n  EXPIRER_EVENTS,\n} from \"../constants\";\nimport { Store } from \"../controllers/store\";\n\nexport class Pairing implements IPairing {\n  public name = PAIRING_CONTEXT;\n  public version = PAIRING_STORAGE_VERSION;\n\n  public events = new EventEmitter();\n  public pairings: IStore<string, PairingTypes.Struct>;\n\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n  private ignoredPayloadTypes = [TYPE_1];\n  private registeredMethods: string[] = [];\n\n  constructor(public core: ICore, public logger: Logger) {\n    this.core = core;\n    this.logger = generateChildLogger(logger, this.name);\n    this.pairings = new Store(this.core, this.logger, this.name, this.storagePrefix);\n  }\n\n  public init: IPairing[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.pairings.init();\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.initialized = true;\n      this.logger.trace(`Initialized`);\n    }\n  };\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  public register: IPairing[\"register\"] = ({ methods }) => {\n    this.isInitialized();\n    this.registeredMethods = [...new Set([...this.registeredMethods, ...methods])];\n  };\n\n  public create: IPairing[\"create\"] = async () => {\n    this.isInitialized();\n    const symKey = generateRandomBytes32();\n    const topic = await this.core.crypto.setSymKey(symKey);\n    const expiry = calcExpiry(FIVE_MINUTES);\n    const relay = { protocol: RELAYER_DEFAULT_PROTOCOL };\n    const pairing = { topic, expiry, relay, active: false };\n    const uri = formatUri({\n      protocol: this.core.protocol,\n      version: this.core.version,\n      topic,\n      symKey,\n      relay,\n    });\n    await this.pairings.set(topic, pairing);\n    await this.core.relayer.subscribe(topic);\n    this.core.expirer.set(topic, expiry);\n\n    return { topic, uri };\n  };\n\n  public pair: IPairing[\"pair\"] = async (params) => {\n    this.isInitialized();\n    this.isValidPair(params);\n    const { topic, symKey, relay } = parseUri(params.uri);\n    const expiry = calcExpiry(FIVE_MINUTES);\n    const pairing = { topic, relay, expiry, active: false };\n    await this.pairings.set(topic, pairing);\n    await this.core.crypto.setSymKey(symKey, topic);\n    await this.core.relayer.subscribe(topic, { relay });\n    this.core.expirer.set(topic, expiry);\n\n    if (params.activatePairing) {\n      await this.activate({ topic });\n    }\n\n    return pairing;\n  };\n\n  public activate: IPairing[\"activate\"] = async ({ topic }) => {\n    this.isInitialized();\n    const expiry = calcExpiry(THIRTY_DAYS);\n    await this.pairings.update(topic, { active: true, expiry });\n    this.core.expirer.set(topic, expiry);\n  };\n\n  public ping: IPairing[\"ping\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.pairings.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_pairingPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"pairing_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    }\n  };\n\n  public updateExpiry: IPairing[\"updateExpiry\"] = async ({ topic, expiry }) => {\n    this.isInitialized();\n    await this.pairings.update(topic, { expiry });\n  };\n\n  public updateMetadata: IPairing[\"updateMetadata\"] = async ({ topic, metadata }) => {\n    this.isInitialized();\n    await this.pairings.update(topic, { peerMetadata: metadata });\n  };\n\n  public getPairings: IPairing[\"getPairings\"] = () => {\n    this.isInitialized();\n    return this.pairings.values;\n  };\n\n  public disconnect: IPairing[\"disconnect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.pairings.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_pairingDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deletePairing(topic);\n    }\n  };\n\n  // ---------- Private Helpers ----------------------------------------------- //\n\n  private sendRequest: IPairingPrivate[\"sendRequest\"] = async (topic, method, params) => {\n    const payload = formatJsonRpcRequest(method, params);\n    const message = await this.core.crypto.encode(topic, payload);\n    const opts = PAIRING_RPC_OPTS[method].req;\n    this.core.history.set(topic, payload);\n    await this.core.relayer.publish(topic, message, opts);\n\n    return payload.id;\n  };\n\n  private sendResult: IPairingPrivate[\"sendResult\"] = async (id, topic, result) => {\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.core.crypto.encode(topic, payload);\n    const record = await this.core.history.get(topic, id);\n    const opts = PAIRING_RPC_OPTS[record.request.method].res;\n    await this.core.relayer.publish(topic, message, opts);\n    await this.core.history.resolve(payload);\n  };\n\n  private sendError: IPairingPrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.core.crypto.encode(topic, payload);\n    const record = await this.core.history.get(topic, id);\n    const opts = PAIRING_RPC_OPTS[record.request.method]\n      ? PAIRING_RPC_OPTS[record.request.method].res\n      : PAIRING_RPC_OPTS.unregistered_method.res;\n\n    await this.core.relayer.publish(topic, message, opts);\n    await this.core.history.resolve(payload);\n  };\n\n  private deletePairing: IPairingPrivate[\"deletePairing\"] = async (topic, expirerHasDeleted) => {\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.core.relayer.unsubscribe(topic);\n    await Promise.all([\n      this.pairings.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.core.crypto.deleteSymKey(topic),\n      expirerHasDeleted ? Promise.resolve() : this.core.expirer.del(topic),\n    ]);\n  };\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  private cleanup = async () => {\n    const expiredPairings = this.pairings.getAll().filter((pairing) => isExpired(pairing.expiry));\n    await Promise.all(expiredPairings.map((pairing) => this.deletePairing(pairing.topic)));\n  };\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.core.relayer.on(RELAYER_EVENTS.message, async (event: RelayerTypes.MessageEvent) => {\n      const { topic, message } = event;\n\n      // messages of certain types should be ignored as they are handled by their respective SDKs\n      if (this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(message))) {\n        return;\n      }\n\n      const payload = await this.core.crypto.decode(topic, message);\n      if (isJsonRpcRequest(payload)) {\n        this.core.history.set(topic, payload);\n        this.onRelayEventRequest({ topic, payload });\n      } else if (isJsonRpcResponse(payload)) {\n        await this.core.history.resolve(payload);\n        this.onRelayEventResponse({ topic, payload });\n      }\n    });\n  }\n\n  private onRelayEventRequest: IPairingPrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as PairingJsonRpcTypes.WcMethod;\n\n    if (!this.pairings.keys.includes(topic)) return;\n\n    switch (reqMethod) {\n      case \"wc_pairingPing\":\n        return this.onPairingPingRequest(topic, payload);\n      case \"wc_pairingDelete\":\n        return this.onPairingDeleteRequest(topic, payload);\n      default:\n        return this.onUnknownRpcMethodRequest(topic, payload);\n    }\n  };\n\n  private onRelayEventResponse: IPairingPrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as PairingJsonRpcTypes.WcMethod;\n\n    if (!this.pairings.keys.includes(topic)) return;\n\n    switch (resMethod) {\n      case \"wc_pairingPing\":\n        return this.onPairingPingResponse(topic, payload);\n      default:\n        return this.onUnknownRpcMethodResponse(resMethod);\n    }\n  };\n\n  private onPairingPingRequest: IPairingPrivate[\"onPairingPingRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_pairingPing\">(id, topic, true);\n      this.events.emit(\"pairing_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.logger.error(err);\n    }\n  };\n\n  private onPairingPingResponse: IPairingPrivate[\"onPairingPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where pairing_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"pairing_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"pairing_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onPairingDeleteRequest: IPairingPrivate[\"onPairingDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic });\n      // RPC request needs to happen before deletion as it utilises pairing encryption\n      await this.sendResult<\"wc_pairingDelete\">(id, topic, true);\n      await this.deletePairing(topic);\n      this.events.emit(\"pairing_delete\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.logger.error(err);\n    }\n  };\n\n  private onUnknownRpcMethodRequest: IPairingPrivate[\"onUnknownRpcMethodRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, method } = payload;\n\n    try {\n      // Ignore if the implementing client has registered this method as known.\n      if (this.registeredMethods.includes(method)) return;\n      const error = getSdkError(\"WC_METHOD_UNSUPPORTED\", method);\n      await this.sendError(id, topic, error);\n      this.logger.error(error);\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.logger.error(err);\n    }\n  };\n\n  private onUnknownRpcMethodResponse: IPairingPrivate[\"onUnknownRpcMethodResponse\"] = (method) => {\n    // Ignore if the implementing client has registered this method as known.\n    if (this.registeredMethods.includes(method)) return;\n    this.logger.error(getSdkError(\"WC_METHOD_UNSUPPORTED\", method));\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic } = parseExpirerTarget(event.target);\n      if (topic) {\n        if (this.pairings.keys.includes(topic)) {\n          await this.deletePairing(topic, true);\n          this.events.emit(\"pairing_expire\", { topic });\n        }\n      }\n    });\n  }\n\n  // ---------- Validation Helpers ----------------------------------- //\n\n  private isValidPair = (params: { uri: string }) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() params: ${params}`);\n      throw new Error(message);\n    }\n    if (!isValidUrl(params.uri)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri: ${params.uri}`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing = async (params: { topic: string }) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidPairingTopic(topic);\n  };\n\n  private isValidDisconnect = async (params: { topic: string }) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidPairingTopic(topic);\n  };\n\n  private isValidPairingTopic = async (topic: any) => {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.pairings.get(topic).expiry)) {\n      await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  };\n}\n","import { formatJsonRpcRequest, isJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { IJsonRpcHistory, JsonRpcRecord, RequestEvent, ICore } from \"@walletconnect/types\";\nimport { getInternalError } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport {\n  CORE_STORAGE_PREFIX,\n  HISTORY_CONTEXT,\n  HISTORY_EVENTS,\n  HISTORY_STORAGE_VERSION,\n} from \"../constants\";\n\nexport class JsonRpcHistory extends IJsonRpcHistory {\n  public records = new Map<number, JsonRpcRecord>();\n  public events = new EventEmitter();\n  public name = HISTORY_CONTEXT;\n  public version = HISTORY_STORAGE_VERSION;\n\n  private cached: JsonRpcRecord[] = [];\n  private initialized = false;\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger);\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IJsonRpcHistory[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restore();\n      this.cached.forEach((record) => this.records.set(record.id, record));\n      this.cached = [];\n      this.registerEventListeners();\n      this.initialized = true;\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey(): string {\n    return this.storagePrefix + this.version + \"//\" + this.name;\n  }\n\n  get size(): number {\n    return this.records.size;\n  }\n\n  get keys(): number[] {\n    return Array.from(this.records.keys());\n  }\n\n  get values() {\n    return Array.from(this.records.values());\n  }\n\n  get pending(): RequestEvent[] {\n    const requests: RequestEvent[] = [];\n    this.values.forEach((record) => {\n      if (typeof record.response !== \"undefined\") return;\n      const requestEvent: RequestEvent = {\n        topic: record.topic,\n        request: formatJsonRpcRequest(record.request.method, record.request.params, record.id),\n        chainId: record.chainId,\n      };\n      return requests.push(requestEvent);\n    });\n    return requests;\n  }\n\n  public set: IJsonRpcHistory[\"set\"] = (topic, request, chainId) => {\n    this.isInitialized();\n    this.logger.debug(`Setting JSON-RPC request history record`);\n    this.logger.trace({ type: \"method\", method: \"set\", topic, request, chainId });\n    if (this.records.has(request.id)) return;\n    const record: JsonRpcRecord = {\n      id: request.id,\n      topic,\n      request: { method: request.method, params: request.params || null },\n      chainId,\n    };\n    this.records.set(record.id, record);\n    this.events.emit(HISTORY_EVENTS.created, record);\n  };\n\n  public resolve: IJsonRpcHistory[\"resolve\"] = async (response) => {\n    this.isInitialized();\n    this.logger.debug(`Updating JSON-RPC response history record`);\n    this.logger.trace({ type: \"method\", method: \"update\", response });\n    if (!this.records.has(response.id)) return;\n    const record = await this.getRecord(response.id);\n    if (typeof record.response !== \"undefined\") return;\n    record.response = isJsonRpcError(response)\n      ? { error: response.error }\n      : { result: response.result };\n    this.records.set(record.id, record);\n    this.events.emit(HISTORY_EVENTS.updated, record);\n  };\n\n  public get: IJsonRpcHistory[\"get\"] = async (topic, id) => {\n    this.isInitialized();\n    this.logger.debug(`Getting record`);\n    this.logger.trace({ type: \"method\", method: \"get\", topic, id });\n    const record = await this.getRecord(id);\n    return record;\n  };\n\n  public delete: IJsonRpcHistory[\"delete\"] = (topic, id) => {\n    this.isInitialized();\n    this.logger.debug(`Deleting record`);\n    this.logger.trace({ type: \"method\", method: \"delete\", id });\n    this.values.forEach((record: JsonRpcRecord) => {\n      if (record.topic === topic) {\n        if (typeof id !== \"undefined\" && record.id !== id) return;\n        this.records.delete(record.id);\n        this.events.emit(HISTORY_EVENTS.deleted, record);\n      }\n    });\n  };\n\n  public exists: IJsonRpcHistory[\"exists\"] = async (topic, id) => {\n    this.isInitialized();\n    if (!this.records.has(id)) return false;\n    const record = await this.getRecord(id);\n    return record.topic === topic;\n  };\n\n  public on: IJsonRpcHistory[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IJsonRpcHistory[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IJsonRpcHistory[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IJsonRpcHistory[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setJsonRpcRecords(records: JsonRpcRecord[]): Promise<void> {\n    await this.core.storage.setItem<JsonRpcRecord[]>(this.storageKey, records);\n  }\n\n  private async getJsonRpcRecords(): Promise<JsonRpcRecord[] | undefined> {\n    const records = await this.core.storage.getItem<JsonRpcRecord[]>(this.storageKey);\n    return records;\n  }\n\n  private getRecord(id: number) {\n    this.isInitialized();\n    const record = this.records.get(id);\n    if (!record) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${id}`);\n      throw new Error(message);\n    }\n    return record;\n  }\n\n  private async persist() {\n    await this.setJsonRpcRecords(this.values);\n    this.events.emit(HISTORY_EVENTS.sync);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getJsonRpcRecords();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.records.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored records for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", records: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore records for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private registerEventListeners(): void {\n    this.events.on(HISTORY_EVENTS.created, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n      this.persist();\n    });\n    this.events.on(HISTORY_EVENTS.updated, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.updated;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n      this.persist();\n    });\n\n    this.events.on(HISTORY_EVENTS.deleted, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n      this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { generateChildLogger, getLoggerContext, Logger } from \"@walletconnect/logger\";\nimport { toMiliseconds } from \"@walletconnect/time\";\nimport { ExpirerTypes, ICore, IExpirer } from \"@walletconnect/types\";\nimport { getInternalError, formatIdTarget, formatTopicTarget } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport {\n  CORE_STORAGE_PREFIX,\n  EXPIRER_CONTEXT,\n  EXPIRER_EVENTS,\n  EXPIRER_STORAGE_VERSION,\n} from \"../constants\";\n\nexport class Expirer extends IExpirer {\n  public expirations = new Map<string, ExpirerTypes.Expiration>();\n  public events = new EventEmitter();\n  public name = EXPIRER_CONTEXT;\n  public version = EXPIRER_STORAGE_VERSION;\n\n  private cached: ExpirerTypes.Expiration[] = [];\n  private initialized = false;\n\n  private storagePrefix = CORE_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger);\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IExpirer[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restore();\n      this.cached.forEach((expiration) => this.expirations.set(expiration.target, expiration));\n      this.cached = [];\n      this.registerEventListeners();\n      this.initialized = true;\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey(): string {\n    return this.storagePrefix + this.version + \"//\" + this.name;\n  }\n\n  get length(): number {\n    return this.expirations.size;\n  }\n\n  get keys(): string[] {\n    return Array.from(this.expirations.keys());\n  }\n\n  get values(): ExpirerTypes.Expiration[] {\n    return Array.from(this.expirations.values());\n  }\n\n  public has: IExpirer[\"has\"] = (key) => {\n    try {\n      const target = this.formatTarget(key);\n      const expiration = this.getExpiration(target);\n      return typeof expiration !== \"undefined\";\n    } catch (e) {\n      // ignore\n      return false;\n    }\n  };\n\n  public set: IExpirer[\"set\"] = (key, expiry) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    const expiration = { target, expiry };\n    this.expirations.set(target, expiration);\n    this.checkExpiry(target, expiration);\n    this.events.emit(EXPIRER_EVENTS.created, {\n      target,\n      expiration,\n    } as ExpirerTypes.Created);\n  };\n\n  public get: IExpirer[\"get\"] = (key) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    return this.getExpiration(target);\n  };\n\n  public del: IExpirer[\"del\"] = (key) => {\n    this.isInitialized();\n    const exists = this.has(key);\n    if (exists) {\n      const target = this.formatTarget(key);\n      const expiration = this.getExpiration(target);\n      this.expirations.delete(target);\n      this.events.emit(EXPIRER_EVENTS.deleted, {\n        target,\n        expiration,\n      } as ExpirerTypes.Deleted);\n    }\n  };\n\n  public on: IExpirer[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IExpirer[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IExpirer[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IExpirer[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private formatTarget(key: string | number) {\n    if (typeof key === \"string\") {\n      return formatTopicTarget(key);\n    } else if (typeof key === \"number\") {\n      return formatIdTarget(key);\n    }\n    const { message } = getInternalError(\"UNKNOWN_TYPE\", `Target type: ${typeof key}`);\n    throw new Error(message);\n  }\n\n  private async setExpirations(expirations: ExpirerTypes.Expiration[]): Promise<void> {\n    await this.core.storage.setItem<ExpirerTypes.Expiration[]>(this.storageKey, expirations);\n  }\n\n  private async getExpirations(): Promise<ExpirerTypes.Expiration[] | undefined> {\n    const expirations = await this.core.storage.getItem<ExpirerTypes.Expiration[]>(this.storageKey);\n    return expirations;\n  }\n\n  private async persist() {\n    await this.setExpirations(this.values);\n    this.events.emit(EXPIRER_EVENTS.sync);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getExpirations();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.expirations.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored expirations for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", expirations: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore expirations for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private getExpiration(target: string): ExpirerTypes.Expiration {\n    const expiration = this.expirations.get(target);\n    if (!expiration) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${target}`);\n      this.logger.error(message);\n      throw new Error(message);\n    }\n    return expiration;\n  }\n\n  private checkExpiry(target: string, expiration: ExpirerTypes.Expiration): void {\n    const { expiry } = expiration;\n    const msToTimeout = toMiliseconds(expiry) - Date.now();\n    if (msToTimeout <= 0) this.expire(target, expiration);\n  }\n\n  private expire(target: string, expiration: ExpirerTypes.Expiration): void {\n    this.expirations.delete(target);\n    this.events.emit(EXPIRER_EVENTS.expired, {\n      target,\n      expiration,\n    } as ExpirerTypes.Expired);\n  }\n\n  private checkExpirations(): void {\n    this.expirations.forEach((expiration, target) => this.checkExpiry(target, expiration));\n  }\n\n  private registerEventListeners(): void {\n    this.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => this.checkExpirations());\n    this.events.on(EXPIRER_EVENTS.created, (createdEvent: ExpirerTypes.Created) => {\n      const eventName = EXPIRER_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: createdEvent });\n      this.persist();\n    });\n    this.events.on(EXPIRER_EVENTS.expired, (expiredEvent: ExpirerTypes.Expired) => {\n      const eventName = EXPIRER_EVENTS.expired;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: expiredEvent });\n      this.persist();\n    });\n    this.events.on(EXPIRER_EVENTS.deleted, (deletedEvent: ExpirerTypes.Deleted) => {\n      const eventName = EXPIRER_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: deletedEvent });\n      this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { EventEmitter } from \"events\";\nimport pino from \"pino\";\n\nimport KeyValueStorage from \"@walletconnect/keyvaluestorage\";\nimport { HeartBeat } from \"@walletconnect/heartbeat\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n} from \"@walletconnect/logger\";\nimport { CoreTypes, ICore } from \"@walletconnect/types\";\n\nimport { Crypto, Relayer, Pairing, JsonRpcHistory, Expirer } from \"./controllers\";\nimport {\n  CORE_CONTEXT,\n  CORE_DEFAULT,\n  CORE_PROTOCOL,\n  CORE_STORAGE_OPTIONS,\n  CORE_VERSION,\n} from \"./constants\";\n\nexport class Core extends ICore {\n  public readonly protocol = CORE_PROTOCOL;\n  public readonly version = CORE_VERSION;\n\n  public readonly name: ICore[\"name\"] = CORE_CONTEXT;\n  public readonly relayUrl: ICore[\"relayUrl\"];\n  public readonly projectId: ICore[\"projectId\"];\n  public events: ICore[\"events\"] = new EventEmitter();\n  public logger: ICore[\"logger\"];\n  public heartbeat: ICore[\"heartbeat\"];\n  public relayer: ICore[\"relayer\"];\n  public crypto: ICore[\"crypto\"];\n  public storage: ICore[\"storage\"];\n  public history: ICore[\"history\"];\n  public expirer: ICore[\"expirer\"];\n  public pairing: ICore[\"pairing\"];\n\n  private initialized = false;\n\n  static async init(opts?: CoreTypes.Options) {\n    const core = new Core(opts);\n    await core.initialize();\n\n    return core;\n  }\n\n  constructor(opts?: CoreTypes.Options) {\n    super(opts);\n\n    this.projectId = opts?.projectId;\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || CORE_DEFAULT.logger }));\n    this.logger = generateChildLogger(logger, this.name);\n    this.heartbeat = new HeartBeat();\n    this.crypto = new Crypto(this, this.logger, opts?.keychain);\n    this.history = new JsonRpcHistory(this, this.logger);\n    this.expirer = new Expirer(this, this.logger);\n    this.storage = opts?.storage\n      ? opts.storage\n      : new KeyValueStorage({ ...CORE_STORAGE_OPTIONS, ...opts?.storageOptions });\n    this.relayer = new Relayer({\n      core: this,\n      logger: this.logger,\n      relayUrl: opts?.relayUrl,\n      projectId: this.projectId,\n    });\n    this.pairing = new Pairing(this, this.logger);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  // ---------- Public ----------------------------------------------- //\n\n  public async start() {\n    if (this.initialized) return;\n    await this.initialize();\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on = (name: any, listener: any) => {\n    return this.events.on(name, listener);\n  };\n\n  public once = (name: any, listener: any) => {\n    return this.events.once(name, listener);\n  };\n\n  public off = (name: any, listener: any) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener = (name: any, listener: any) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.crypto.init();\n      await this.history.init();\n      await this.expirer.init();\n      await this.relayer.init();\n      await this.heartbeat.init();\n      await this.pairing.init();\n      this.initialized = true;\n      this.logger.info(`Core Initialization Success`);\n    } catch (error) {\n      this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, error);\n      this.logger.error((error as any).message);\n      throw error;\n    }\n  }\n}\n","import { Core as WalletConnectCore } from \"./core\";\n\nexport * from \"./constants\";\nexport * from \"./controllers\";\n\nexport const Core = WalletConnectCore;\nexport default WalletConnectCore;\n"],"names":["fromString","from","basex","decode","encode","identity","varint","varint.encodingLength","varint.encodeTo","Digest.create","base2","base8","base10","base16","base32","base36","base64","base256emoji","bases","ONE_DAY","SIX_HOURS","ONE_SECOND","THIRTY_DAYS","FIVE_SECONDS","THIRTY_SECONDS","core","logger","KEYCHAIN_CONTEXT","KEYCHAIN_STORAGE_VERSION","CORE_STORAGE_PREFIX","keychain","tag","key","message","getInternalError","generateChildLogger","getLoggerContext","mapToObj","objToMap","CRYPTO_CONTEXT","seed","keyPair","relayAuth","generateKeyPairUtil","aud","sub","generateRandomBytes32","ttl","CRYPTO_JWT_TTL","selfPublicKey","peerPublicKey","overrideTopic","selfPrivateKey","symKey","deriveSymKey","topic","hashKey","publicKey","payload","opts","params","validateEncoding","safeJsonStringify","isTypeOneEnvelope","type","senderPublicKey","encrypt","encoded","validateDecoding","decrypt","safeJsonParse","KeyChain","deserialized","deserialize","decodeTypeByte","privateKey","CRYPTO_CLIENT_SEED","e","IMessageTracker","MESSAGES_CONTEXT","MESSAGES_STORAGE_VERSION","messages","hash","hashMessage","IPublisher","relayer","EventEmitter","PUBLISHER_CONTEXT","PUBLISHER_DEFAULT_TTL","relay","getRelayProtocolName","prompt","createExpiringPromise","RELAYER_EVENTS","err","event","listener","_a","_b","_c","_d","request","getRelayProtocolApi","isUndefined","_params","HEARTBEAT_EVENTS","id","ids","remaining","x","h","g","o","b","ISubscriber","SubscriberTopicMap","SUBSCRIBER_CONTEXT","SUBSCRIBER_STORAGE_VERSION","resolve","reject","watch","Watch","interval","PENDING_SUB_RESOLUTION_TIMEOUT","result","reason","getSdkError","__spreadProps","__spreadValues","subscriptions","subscription","SUBSCRIBER_EVENTS","persisted","createdEvent","eventName","deletedEvent","IRelayer","RELAYER_CONTEXT","pino","getDefaultLoggerOptions","RELAYER_DEFAULT_LOGGER","MessageTracker","Subscriber","Publisher","RELAYER_DEFAULT_RELAY_URL","relayUrl","_res","error","RELAYER_RECONNECT_TIMEOUT","auth","JsonRpcProvider","WsConnection","formatRelayRpcUrl","RELAYER_SDK_VERSION","messageEvent","isJsonRpcRequest","RELAYER_SUBSCRIBER_SUFFIX","response","formatJsonRpcResult","RELAYER_PROVIDER_EVENTS","toMiliseconds","c","n","IStore","name","storagePrefix","getKey","STORE_STORAGE_VERSION","value","isProposalStruct","isSessionStruct","filter","isEqual","update","PAIRING_CONTEXT","PAIRING_STORAGE_VERSION","TYPE_1","methods","expiry","calcExpiry","FIVE_MINUTES","RELAYER_DEFAULT_PROTOCOL","pairing","uri","formatUri","parseUri","done","createDelayedPromise","engineEvent","metadata","method","formatJsonRpcRequest","PAIRING_RPC_OPTS","record","formatJsonRpcError","expirerHasDeleted","expiredPairings","isExpired","reqMethod","resMethod","_topic","isJsonRpcResult","isJsonRpcError","isValidParams","isValidUrl","isValidString","Store","isJsonRpcResponse","EXPIRER_EVENTS","parseExpirerTarget","IJsonRpcHistory","HISTORY_CONTEXT","HISTORY_STORAGE_VERSION","chainId","HISTORY_EVENTS","requests","requestEvent","records","IExpirer","EXPIRER_CONTEXT","EXPIRER_STORAGE_VERSION","expiration","target","formatTopicTarget","formatIdTarget","expirations","expiredEvent","Core","ICore","CORE_PROTOCOL","CORE_VERSION","CORE_CONTEXT","CORE_DEFAULT","HeartBeat","Crypto","JsonRpcHistory","Expirer","KeyValueStorage","CORE_STORAGE_OPTIONS","Relayer","Pairing","WalletConnectCore"],"mappings":"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"}